<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Autodesk.ProductInterface.PowerSHAPE</name>
    </assembly>
    <members>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection">
            <summary>
            Captures the collection of CompCurves in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Composite Curve
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurveThroughPoints(Autodesk.ProductInterface.PowerSHAPE.CurveTypes,Autodesk.Geometry.Point[])">
            <summary>
            Creates a new compcurve through the specified points
            </summary>
            <param name="curveType">CurveTypes enum value for curev type</param>
            <param name="points">Optional array of points or singular point for curve to go through</param>
            <returns>A curve created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurveFromWireframe(Autodesk.ProductInterface.PowerSHAPE.PSWireframe[])">
            <summary>
            Creates a new compcurve from Wireframe
            </summary>
            <param name="wireframe">The wireframe to turn into a CompCurve (arc, compcurve, curve or line)</param>
            <returns>The CompCurve created from the wireframe</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromIntersectionOfTwoSetsOfEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity})">
            <summary>
            Creates CompCurves from an intersection between two sets of entities
            </summary>
            <param name="firstEntities">The first set of entities to intersect</param>
            <param name="secondEntities">The second set of entities to intersect</param>
            <returns>A list of the created CompCurves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromIntersectionOfTwoSetsOfSurfaces(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSSurface},System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSSurface})">
            <summary>
            Creates CompCurves from an intersection between two sets of surfaces
            </summary>
            <param name="firstSurfaces">The first set of surfaces to intersect</param>
            <param name="secondSurfaces">The second set of surfaces to intersect</param>
            <returns>A list of the created CompCurves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromIntersectionOfTwoSurfaces(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Creates CompCurves from an intersection between two surfaces
            </summary>
            <param name="firstSurface">The first surface to intersect</param>
            <param name="secondSurface">The second surface to intersect</param>
            <returns>A list of the created CompCurves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromIntersectionOfTwoSolids(Autodesk.ProductInterface.PowerSHAPE.PSSolid,Autodesk.ProductInterface.PowerSHAPE.PSSolid)">
            <summary>
            Creates CompCurves from an intersection between two solids
            </summary>
            <param name="firstSolid">The first solid to intersect</param>
            <param name="secondSolid">The second solid to intersect</param>
            <returns>A list of the created CompCurves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromIntersectionOfSurfaceAndSolid(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSSolid)">
            <summary>
            Creates CompCurves from an intersection between a surface and a solid
            </summary>
            <param name="firstSurface">The surface to intersect</param>
            <param name="secondSolid">The solid to intersect</param>
            <returns>A list of the created CompCurves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromIntersectionOfSurfaceAndMesh(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Creates CompCurves from an intersection between a surface and a mesh.
            </summary>
            <param name="surface">The surface to intersect.</param>
            <param name="mesh">The mesh to intersect.</param>
            <returns>The list of the created CompCurves.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateObliqueCurve(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.Planes,Autodesk.Geometry.MM)">
            <summary>
            Creates an Oblique curve against either a mesh, solid or surface.
            </summary>
            <param name="entityToOblique">The entity to be cut by the oblique curve.</param>
            <param name="UsePlane">Sets the principal plane.</param>
            <param name="position">Distance along plane to drop curve on.</param>
            <exception cref="T:System.ApplicationException">No curves were created from intersection operation.</exception>
            <exception cref="T:System.ApplicationException">Entity must be Mesh, Surface or Solid.</exception>
            <returns>List of CompCurves.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromAnnotation(Autodesk.ProductInterface.PowerSHAPE.PSAnnotation)">
            <summary>
            Converts the specified PSAnnotation into a series of PSCompCurves
            </summary>
            <param name="annotationToConvert">The annotation to convert</param>
            <returns>A list of PSCompCurves</returns>
            <remarks>The original PSAnnotation will no longer exist after this operation</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurvesCollection.CreateCompCurvesFromAnnotations(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSAnnotation})">
            <summary>
            Converts the specified PSAnnotations into a series of PSCompCurves
            </summary>
            <param name="annotationsToConvert">The annotations to convert</param>
            <returns>A list of PSCompCurves</returns>
            <remarks>The original PSAnnotations will no longer exist after this operation</remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection">
            <summary>
            Captures a collection of Curves in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Curve
            </summary>
            <returns></returns>
            <value></value>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection.CreateCurveThroughPoints(Autodesk.ProductInterface.PowerSHAPE.CurveTypes,Autodesk.Geometry.Point[])">
            <summary>
            Creates a new curve through the specified points
            </summary>
            <param name="curveType">CurveTypes enum value for curev type</param>
            <param name="points">Optional array of points or singular point for curve to go through</param>
            <returns>Curve created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection.CreateCurveFromCompCurve(Autodesk.ProductInterface.PowerSHAPE.PSCompCurve)">
            <summary>
            Creates a Curve from a CompCurve
            </summary>
            <param name="compCurve">CompCurve to create a curev from</param>
            <returns>Curve created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection.CreateCurveFromSketch(System.Boolean,System.Int32)">
            <summary>
            Allows the user to sketch a curve.
            </summary>
            <param name="closeCurve">Forces the user to create a curve that is closed</param>
            <param name="interval">The number of milliseconds to wait before each check for a new curve.  Defaults to 0.5seconds</param>
            <returns>Curve created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurvesCollection.CreateCurvesFromMSRFile(Autodesk.Geometry.MSRFile,System.Int32)">
            '
            <summary>
            ' Thie operation creates new curves by projecting wireframe onto a solid
            '
            </summary>
            '
            <param name="solidToWrapTo">The solid that will have wireframe wrapped onto it</param>
            '
            <param name="wireframeToWrap">The curves or compcurves that will be wrapped</param>
            '
            <param name="rotation">The desired rotation or the wireframe before wrapping</param>
            '
            <returns>A list of the created curves</returns>
            <summary>
            Creates new curves from MSR data
            </summary>
            <param name="msrFile">The file from which to get the point data</param>
            <param name="pointsPerCurve">The number of points in each curve</param>
            <returns>A list of created curves</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSAnnotationsCollection">
            <summary>
            Captures the collection of Annotations in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotationsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotationsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting an Annotation
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotationsCollection.CreateAnnotation(System.String,System.String,System.Double,Autodesk.Geometry.Point)">
            <summary>
            Creates a new annotation in PowwerSHAPE and adds it to the annotations collection.
            </summary>
            <param name="text">The text to introduce in PowerShape.</param>
            <param name="fontName">
            The font type for the text (e.g. Arial, Times New Roman). The font Type must exist in
            PowerShape.
            </param>
            <param name="height">The font height.</param>
            <param name="position">The position of the text in the active workplane.</param>
            <remarks>The created text will have pitch of 0, text origin will be 'CENTRE' and text justification will be 'LEFT'.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotationsCollection.CreateAnnotation(System.String,System.String,System.Double,Autodesk.Geometry.Point,System.Double,Autodesk.ProductInterface.PowerSHAPE.TextJustifications,Autodesk.ProductInterface.PowerSHAPE.TextOrigins)">
            <summary>
            Creates a new annotation in PowwerSHAPE.
            </summary>
            <param name="text">The text to introduce in PowerShape.</param>
            <param name="fontName">
            The font type for the text (e.g. Arial, Times New Roman). The font Type must exist in
            PowerShape.
            </param>
            <param name="height">The font height.</param>
            <param name="pitch">The distance between each character in a line.</param>
            <param name="textJustification">
            The wanted justify option. This is how the text in the block aligns with the left and
            right margins.
            </param>
            <param name="textOrigin">
            The origin of the text block. The origin is the 'anchor point' used to position the text and
            can be set at any of the four corners of the text box, the mid points of the sides of the text box or the centre of the
            text box. Use the option menu to change the origin of the text.
            </param>
            <param name="position">The position of the text in the active workplane.</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection">
            <summary>
            Captures the collection of Arcs in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting an Arc
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.CreateArcCircle(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Double)">
            <summary>
            Creates an arc with the specified start point and radius.
            </summary>
            <param name="centre">Centre point for arc</param>
            <param name="start">Start point for arc</param>
            <param name="radius">Radius for arc</param>
            <returns>Arc created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.CreateArcSpanImplicit(Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates an arc between the start and end points,
            inferring the radius from the start point.
            </summary>
            <param name="centre">Centre point for arc</param>
            <param name="startPoint">Start point for arc</param>
            <param name="endPoint">End point for arc</param>
            <returns>Arc created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.CreateArcSpanExplicit(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Double,Autodesk.Geometry.Degree)">
            <summary>
            Creates an arc from the start point, with the specified radius,
            and with the specified span.
            </summary>
            <param name="centre">Centre point for arc</param>
            <param name="start">Start point for arc</param>
            <param name="radius">Radius for arc</param>
            <param name="span">Span for arc</param>
            <returns>Arc created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.CreateArcThroughThreePoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates an arc from the start point to the end point with a specified intermediate point.
            To subsequently change the radius to mimic PowerShape functionality, the Radius property should be used.
            </summary>
            <param name="startPoint">The start point of the arc.</param>
            <param name="endPoint">The end point of the arc.</param>
            <param name="intermediatePoint">An intermediate point on the span of the arc between the start and end point.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArcsCollection.SketchArcThroughThreePoints(System.Int32)">
            <summary>
            Creates an Arc by allowing the user to sketch through three points
            </summary>
            <param name="interval">The time in milliseconds between each check to see if the curve has been created yet</param>
            <returns>Arc created by the operation</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSElectrodesCollection">
            <summary>
            Captures a collection of Electrodes in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrodesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrodesCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting an Electrode
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrodesCollection.AddToSelection(System.Boolean)">
            <summary>
            Adds all of the electrodes to the selection.
            </summary>
            <param name="emptySelectionFirst">If true it will empty PowerShape selection first.</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurvesCollection`1">
            <summary>
            Base class for curve collections
            </summary>
            <typeparam name="T"></typeparam>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurvesCollection`1.CreateCurveFromBreakPoint(`0,System.Int32)">
            <summary>
            Breaks a curve at the specified point.  The first section of
            the curve is retained, while the second section becomes a new curve.
            </summary>
            <param name="initialCurve">The curve to be split.</param>
            <param name="breakPoint">The point at which to break the initial curve. Index starts from zero.</param>
            <returns>A new curve that is the second portion of the initial.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurvesCollection`1.CreateCurvesFromWrap(Autodesk.ProductInterface.PowerSHAPE.PSSurface,System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve},Autodesk.Geometry.Degree)">
            <summary>
            Creates new curves and compcurves by projecting wireframe onto a surface
            </summary>
            <param name="surfaceToWrapTo">The surface that will have wireframe wrapped onto it</param>
            <param name="wireframeToWrap">The curves and compcurves that will be wrapped</param>
            <param name="rotation">The desired rotation or the wireframe before wrapping</param>
            <returns>A list of the created curves and compcurves</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLinesCollection">
            <summary>
            Captures a collection of Lines in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLinesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLinesCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Line
            </summary>
            <returns></returns>
            <value></value>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLinesCollection.CreateLine(Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates a line between the specified points.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <returns>The new line.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLinesCollection.CreateLines(Autodesk.Geometry.Point[])">
            <summary>
            Creates lines between the specified points.
            A line will be created between each two consecutive points (e.g. Line between 1st and 2nd points, line between 2nd and 3rd points, etc.).
            </summary>
            <param name="points">The list of points used to create the lines.</param>
            <returns>The new lines.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection">
            <summary>
            Captures a collection of Meshes in a Project
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Mesh
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection.CreateMeshFromDMT(Autodesk.Geometry.DMTModel)">
            <summary>
            Creates a new Mesh from a DMT Model
            </summary>
            <param name="model">The DMT Model from which to create the mesh</param>
            <returns>Mesh created by operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection.CreateMeshFromSurface(Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Creates a new Mesh from a Surface
            </summary>
            <param name="surface">The Surface from which to create the mesh</param>
            <returns>Mesh created by operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection.CreateMeshFromSolid(Autodesk.ProductInterface.PowerSHAPE.PSSolid)">
            <summary>
            Creates a new Mesh from a Solid
            </summary>
            <param name="solid">The Solid from which to create the mesh</param>
            <returns>Mesh created by operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshesCollection.CreateMeshFromFile(Autodesk.FileSystem.File)">
            <summary>
            Creates a new Mesh from a specified file
            </summary>
            <param name="file">The file from which to create the mesh</param>
            <returns>Mesh created by operation</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSPointsCollection">
            <summary>
            Captures the collection of Points in a Project.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPointsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPointsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Point
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPointsCollection.CreatePoint(Autodesk.Geometry.Point)">
            <summary>
            Creates a single point in PowerShape.
            </summary>
            <param name="point">The point to create.</param>
            <returns>The created point.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPointsCollection.CreatePointBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            This operation creates a new Point using the position dialog.
            </summary>
            <param name="firstPoint">The first point to be used.</param>
            <param name="secondPoint">The last point to be used.</param>
            <returns>The point between the first and the second points.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPointsCollection.CreatePointAtIntersectionOfSurfaceAndWireframe(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSWireframe)">
            <summary>
            This operation creates a new PSPoint at the point of intersection of a surface and a wireframe.
            Note that if the two do not intersect then a point will be created at the origin of the active workplane.
            The user should be sure that the surface and wireframe intersect before calling this function
            </summary>
            <param name="surface">The surface to create a point on where the wireframe intersects</param>
            <param name="wireframe">The wireframe that intersects the surface</param>
            <returns>The created PSPoint at the point of intersection</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection">
            <summary>
            Captures the collection of Solids in a Project.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Solid.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.AddToSelection(System.Boolean)">
            <summary>
            Selects all solids in the collection.
            </summary>
            <param name="emptySelectionFirst">If true it will empty the current PowerShape selection.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSolidExtrusionFromWireframe(Autodesk.ProductInterface.PowerSHAPE.PSWireframe,Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates an extruded solid from wireframe.
            </summary>
            <param name="wireframe">The wireframe from which an extruded solid will be created.</param>
            <param name="length">The length of the extruded solid.</param>
            <param name="negLength">The negative length of the extruded solid.</param>
            <returns>The created solid.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSolidExtrusionsFromWireframes(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSWireframe},Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates extruded solids from a list of wireframes.
            </summary>
            <param name="wireframes">The list of wireframes from which an extruded solid will be created.</param>
            <param name="length">The length of the extruded solid.</param>
            <param name="negLength">The negative length of the extruded solid.</param>
            <returns>The created solids.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSolidsFromSurfaces(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSSurface})">
            <summary>
            Creates a solid from a list of surfaces.
            </summary>
            <param name="surfacesToConvert">Surfaces to be converted to a solid.</param>
            <returns>The solid created from the surfaces.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSolidFromMesh(Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Creates a solid from a mesh.
            </summary>
            <param name="meshToConvert">The mesh to be converted to a solid.</param>
            <returns>The solid created from the mesh.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSphere(Autodesk.Geometry.Point,Autodesk.Geometry.MM)">
            <summary>
            Creates a new solid sphere at the specified origin and radius.
            </summary>
            <param name="origin">Origin at which to create the sphere.</param>
            <param name="radius">Radius of the sphere.</param>
            <returns>The created sphere.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateCylinder(Autodesk.Geometry.Point,Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates a new solid cylinder at the specified origin, radius and length.
            </summary>
            <param name="origin">Origin at which to create the cylinder.</param>
            <param name="radius">Radius of the cylinder.</param>
            <param name="length">Length of the cylinder.</param>
            <returns>The created cylinder.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateBlock(Autodesk.Geometry.Point,Autodesk.Geometry.MM,Autodesk.Geometry.MM,Autodesk.Geometry.MM,Autodesk.Geometry.Degree)">
            <summary>
            Creates a new solid block at the specified origin, with the specified height, width, length
            and draft angle for all walls.
            </summary>
            <param name="origin">Origin at which to create the block.</param>
            <param name="width">Width of the block.</param>
            <param name="length">Length of the block.</param>
            <param name="height">Height of the block.</param>
            <param name="draftAngle">Draft angle to use for all walls.</param>
            <returns>The created block.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSolidFromDriveAndSections(Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve,System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve})">
            <summary>
            Creates a solid from a drive curve and one or more sections.
            </summary>
            <param name="driveCurve">The drive curve for the solid.</param>
            <param name="sections">The sections through which to drive the solid.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateCone(Autodesk.Geometry.Point)">
            <summary>
            Creates a new solid cone at the specified origin.
            </summary>
            <param name="origin">Origin at which to create the cone.</param>
            <returns>The created cone.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateTorus(Autodesk.Geometry.Point)">
            <summary>
            Creates a new solid Torus at the specified origin.
            </summary>
            <param name="origin">Origin at which to create the Torus.</param>
            <returns>The created Torus.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidsCollection.CreateSpring(Autodesk.Geometry.Point)">
            <summary>
            Creates a new solid spring at the specified origin.
            </summary>
            <param name="origin">Origin at which to create the spring.</param>
            <returns>The created spring.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurvesCollection`1">
            <summary>
            Base class for PSLateralsCollection and PSLongitudinalsCollection.
            </summary>
            <typeparam name="T">The type of PSSurfaceCurve.</typeparam>
            <remarks></remarks>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurvesCollection`1._parentSurface">
            <summary>
            The parent surface of a PSSurface.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurvesCollection`1.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powershape">The base instance to interact with PowerShape.</param>
            <param name="parentSurface">The parent surface for the lateral.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurvesCollection`1.Remove(`0)">
            <summary>
            Removes surface curve from PowerShape and from surface curves collection.
            </summary>
            <param name="surfaceCurve">The surface curve to delete.</param>
            <returns>True if it removes curve from curves collection. False if it fails to remove curve from collection, but curve will be removed from PowerShape.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection">
            <summary>
            Captures the collection of Surfaces in a Project.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            New surfaces collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.Identifier">
            <summary>
            Gets the identifer used by PowerSHAPE when selecting a Surface.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateSurface(Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfacingMethods,Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfaceTypes,Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions)">
            <summary>
            Creates a new Surface using PowerSHAPE's automatic surfacing methods.  Any necessary wireframe must already be selected.
            </summary>
            <param name="automaticSurfacingMethod">The method to use to create the surface.</param>
            <param name="surfaceType">The type of the new surface NURBS or a PowerSurface.</param>
            <param name="advancedSurfaceOptions">The advanced surface option that can be used when creating the surface.</param>
            <returns>The new surface.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateFillInSurface(Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve)">
            <summary>
            Creates a fill in Surface from the specified Curve or Composite Curve.
            </summary>
            <param name="genericCurve">The curve or composite curve from which to create the fill in surface.</param>
            <returns>The new surface.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateSurfaceFromTriangles(Autodesk.ProductInterface.PowerSHAPE.PSMesh,System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve},System.Double,System.Double,System.Int32)">
            <summary>
            Creates a surface from triangles using the specified parameters
            </summary>
            <param name="mesh">The mesh from which to create the surface</param>
            <param name="pointsProportion">The points proportion. Defaults to 25.0</param>
            <param name="orientationAngle">The orientation angle of the surface.  Defaults to 0.0</param>
            <param name="numberOfPatches">The number of surface patches.  Defaults to 10</param>
            <returns>The created surface.</returns>
            <exception cref="T:System.Exception">Failed to create surface from Mesh.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateExtrudedSurface(Autodesk.ProductInterface.PowerSHAPE.PSWireframe,Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates an extruded surface from wireframe.
            </summary>
            <param name="wireframe">The wireframe from which an extruded surface will be created.</param>
            <param name="length">The length of the extruded surface.</param>
            <param name="negLength">The negative length of the extruded surface.</param>
            <returns>The new surface.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateExtrudedSurfaces(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.PSWireframe},Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates extruded surfaces from a list of wireframes.
            </summary>
            <param name="wireframes">The list of wireframes from which an extruded surface will be created.</param>
            <param name="length">The length of the extruded surface.</param>
            <param name="negLength">The negative length of the extruded surface.</param>
            <returns>The new surface.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateSurfacesFromSolid(Autodesk.ProductInterface.PowerSHAPE.PSSolid)">
            <summary>
            Converts a solid into surfaces.
            </summary>
            <param name="solidToConvert">The solid to be converted into surfaces.</param>
            <returns>The list of the surfaces created from the solid.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateSurfaceFromBreak(Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve)">
            <summary>
            Breaks a surface at the indicated surface curve, so creating a new surface.
            </summary>
            <param name="breakCurve">The surface curve at which to break the surface.</param>
            <returns>The surface created by the operation.</returns>
            <remarks>The original surface is derived from the breakCurve parameter.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateFilletSurfaces(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSSurface,System.Double,Autodesk.ProductInterface.PowerSHAPE.FilletTypes,Autodesk.ProductInterface.PowerSHAPE.FilletTrimOptions,Autodesk.ProductInterface.PowerSHAPE.FilletRouteOptions,Autodesk.ProductInterface.PowerSHAPE.FilletCreaseOptions,Autodesk.ProductInterface.PowerSHAPE.FilletCornerTypes)">
            <summary>
            Creates fillet surfaces from two individual surfaces.
            </summary>
            <param name="firstSurface">The primary surface to fillet.</param>
            <param name="secondSurface">The secondary surface to fillet.</param>
            <param name="filletRadius">The radius of the fillet.</param>
            <param name="filletType">Whether the fillet is concave or convex.</param>
            <param name="filletTrim">Whether the creation of the fillet trims surrounding surfaces.</param>
            <param name="filletRoute">whether the fillet follows all possible routes.</param>
            <param name="filletCrease">Whether the fillet is created along creases.</param>
            <param name="filletCorners">Whether any corners are Roll, Mitre or Round.</param>
            <returns>The list of created surfaces.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateFilletSurfaces(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSSurface},System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSSurface},System.Double,Autodesk.ProductInterface.PowerSHAPE.FilletTypes,Autodesk.ProductInterface.PowerSHAPE.FilletTrimOptions,Autodesk.ProductInterface.PowerSHAPE.FilletRouteOptions,Autodesk.ProductInterface.PowerSHAPE.FilletCreaseOptions,Autodesk.ProductInterface.PowerSHAPE.FilletCornerTypes)">
            <summary>
            Creates a fillet from the two lists of surfaces.
            </summary>
            <param name="firstSurfaces">The primary surfaces to fillet.</param>
            <param name="secondSurfaces">The secondary surfaces to fillet.</param>
            <param name="filletRadius">The radius of the fillet.</param>
            <param name="filletType">Whether the fillet is concave or convex.</param>
            <param name="filletTrim">Whether the creation of the fillet trims surrounding surfaces.</param>
            <param name="filletRoute">whether the fillet follows all possible routes.</param>
            <param name="filletCrease">Whether the fillet is created along creases.</param>
            <param name="filletCorners">Whether any corners are Roll, Mitre or Round.</param>
            <returns>The list of created surfaces.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreatePlane(Autodesk.Geometry.Point,Autodesk.Planes)">
            <summary>
            Creates a plane at a specified origin.
            </summary>
            <param name="origin">The origin at which to create the plane.</param>
            <param name="principalPlane">Sets the principal plane. Defines which plane is the principal plane of the workspace.</param>
            <returns>The created plane.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreatePlaneWithDimensions(Autodesk.Geometry.Point,Autodesk.Planes,Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates a plane at a specified origin and sets its length and width.
            </summary>
            <param name="origin">The origin at which to create the plane.</param>
            <param name="principalPlane">Sets the principal plane. Defines which plane is the principal plane of the workspace.</param>
            <param name="length">The desired length of the plane.</param>
            <param name="width">The desired width of the plane.</param>
            <returns>The created plane.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateRevolvedSurface(Autodesk.Axes,Autodesk.Geometry.Degree,Autodesk.ProductInterface.PowerSHAPE.PSWireframe)">
            <summary>
            Creates a revolved surface from a list of wireframe.
            </summary>
            <param name="rotationAxis">The axis around which to revolve the surface.</param>
            <param name="angleOfRevolution">The angle round which to revolve.</param>
            <param name="wireframe">The wireframe representing the profile of the surface.</param>
            <returns>A revolved surface.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.AddToSelection(System.Boolean)">
            <summary>
            Adds all Surfaces to the current selection.
            </summary>
            <param name="emptySelectionFirst">If true it will empty the PowerShape selection first.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateSphere(Autodesk.Geometry.Point,Autodesk.Geometry.MM)">
            <summary>
            Creates a new surface sphere at the specified origin and radius.
            </summary>
            <param name="origin">Origin at which to create the sphere.</param>
            <param name="radius">Radius of the sphere.</param>
            <returns>The created sphere.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateCylinder(Autodesk.Geometry.Point,Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            Creates a new surface cylinder at the specified origin, radius and length.
            </summary>
            <param name="origin">The origin at which to create the cylinder.</param>
            <param name="radius">The radius of the cylinder.</param>
            <param name="length">The length of the cylinder.</param>
            <returns>The created cylinder.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateBlock(Autodesk.Geometry.Point,Autodesk.Geometry.MM,Autodesk.Geometry.MM,Autodesk.Geometry.MM,Autodesk.Geometry.Degree)">
            <summary>
            Creates a new surface block at the specified origin, with the specified height, width, length
            and draft angle for all walls.
            </summary>
            <param name="origin">The origin at which to create the block.</param>
            <param name="width">The width of the block.</param>
            <param name="length">The length of the block.</param>
            <param name="height">The height of the block.</param>
            <param name="draftAngle">The draft angle to use for all walls.</param>
            <returns>The created block.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateCone(Autodesk.Geometry.Point)">
            <summary>
            Creates a cone at a specified origin.
            </summary>
            <param name="origin">The origin at which to create the cone.</param>
            <returns>The created cone.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateTorus(Autodesk.Geometry.Point)">
            <summary>
            Creates a Torus at a specified origin.
            </summary>
            <param name="origin">The origin at which to create the Torus.</param>
            <returns>The created Torus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacesCollection.CreateSpring(Autodesk.Geometry.Point)">
            <summary>
            Creates a spring at a specified origin.
            </summary>
            <param name="origin">The origin at which to create the spring.</param>
            <returns>The created spring.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection">
            <summary>
            Captures the collection of Workplanes in a Project.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Workplane.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplane(Autodesk.Geometry.Workplane)">
            <summary>
            This operation creates a new Workplane from a Geometry.Workplane and adds it to the collection.
            </summary>
            <param name="workplane">The workplane from which to create a workplane in PowerSHAPE.</param>
            <returns>The created Workplane in PowerSHAPE.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplaneFromZAxis(Autodesk.Geometry.Point,Autodesk.Geometry.Vector)">
            <summary>
            This operation creates a new Workplane from just an origin and a Z axis.  The X and Y axes are
            created off the Z axis orientation.
            </summary>
            <param name="origin">The origin at which to create the new workplane.</param>
            <param name="zAxis">The Z axis of the new workplane.</param>
            <returns>The created workplane.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplaneFromXYAxes(Autodesk.Geometry.Point,Autodesk.Geometry.Vector,Autodesk.Geometry.Vector)">
            <summary>
            This operation creates a new Workplane from just an origin and an X and Y axis.  The Z axis is
            created off the X and Y axes orientation.
            </summary>
            <param name="origin">The origin at which to create the new workplane.</param>
            <param name="xAxis">The X axis of the new workplane.</param>
            <param name="yAxis">The Y axis of the new workplane.</param>
            <returns>The created workplane.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplaneFromThreePoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates a new Workplane from three points.
            </summary>
            <param name="origin">The origin of the workplane to be created.</param>
            <param name="xAxisPoint">The point on the intended X axis of the workplane to be created.</param>
            <param name="yAxisPoint">The point on the intended Y axis of the workplane to be created.</param>
            <returns>The created workplane in PowerSHAPE.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplaneAtEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.NewWorkplaneInEntityPositions)">
            <summary>
            Creates a new Workplane relative to an entity and adds it to the collection.
            </summary>
            <param name="entity">The entity on which to create the new Workplane.</param>
            <param name="positionAtEntity">The position on the entity at which to create the workplane: Centre, Top, Bottom.</param>
            <returns>The created workplane.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplaneAlignedToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.Geometry.Point)">
            <summary>
            Creates a new Workplane relative to an entity and adds it to the collection.
            </summary>
            <param name="entity">The entity on which to create the new Workplane.</param>
            <param name="origin">The intended origin for the workplane.</param>
            <returns>The created workplane.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.CreateWorkplaneAlignedToView(Autodesk.Geometry.Point)">
            <summary>
            Creates a new Workplane oriented to the current view at the specified origin and adds it to the collection.
            </summary>
            <param name="origin">The intended origin for the workplane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplanesCollection.AddToSelection(System.Boolean)">
            <summary>
            Overrides the AddToSelection in EntitiesCollection.
            </summary>
            <param name="emptySelectionFirst">The selection CANNOT be cleared first as workplanes cannot be selected along with other Entity types.</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLateralsCollection">
            <summary>
            Captures a collection of laterals in a project
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLateralsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLateralsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Composite Curve
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinalsCollection">
            <summary>
            Captures a collection of Longitudinals in a project
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinalsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinalsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Composite Curve
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1">
            <summary>
            Abstract base class that all list classes are based on.
            </summary>
            <typeparam name="T">The type of the PSEntity.</typeparam>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.Item(System.String)">
            <summary>
            Gets the desired indexed entity from the the collection.
            </summary>
            <returns>The desired entity.</returns>
            <value>The index of the desired entity.</value>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the entity at the specified index from PowerShape and from the collection.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.Remove(`0)">
            <summary>
            Removes the specified item from PowerShape and from the collection.
            </summary>
            <param name="entity">The entity to remove.</param>
            <returns>True if entity was removed from the collection.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.Remove(System.String)">
            <summary>
            Removes the specified item by name from PowerShape and from the collection.
            </summary>
            <param name="entityName">The name of the entity.</param>
            <returns>True if entity was removed from the collection.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.Clear">
            <summary>
            Removes all entities in the list.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.AddToSelection(System.Boolean)">
            <summary>
            Adds all of the current entity type to the selection.
            </summary>
            <param name="emptySelectionFirst">If true it will empty PowerShape selection first.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntitiesCollection`1.RemoveFromSelection">
            <summary>
            Removes all of the current entity type from the selection
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection">
            <summary>
            Captures the list of open models in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.Identifier">
            <summary>
            Gets the model identifier in PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.Item(System.String)">
            <summary>
            Gets the desired named model from the the collection.
            </summary>
            <returns>The desired model.</returns>
            <value>The name of the desired model.</value>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.CreateEmptyModel">
            <summary>
            Creates a new empty model in PowerSHAPE.
            </summary>
            <returns>The created empty model.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.CreateModelFromFile(Autodesk.FileSystem.File,System.Boolean)">
            <summary>
            Creates a new Model from a PowerSHAPE model file.
            </summary>
            <param name="file">The PowerSHAPE model file to create the model from.</param>
            <param name="openReadOnly">Open the model read only. Defaults to false.</param>
            <returns>The created model.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the model at the specified index from the collection. Closes all windows associated with the selected model.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.Remove(System.String)">
            <summary>
            Removes the model with the specified name from the collection. Closes all windows associated with the selected model.
            </summary>
            <param name="name">The name of the model to remove.</param>
            <returns>True if succeeds to remove model.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.Remove(Autodesk.ProductInterface.PowerSHAPE.PSModel)">
            <summary>
            Removes the specified model. Closes all windows associated with the selected model.
            </summary>
            <param name="model">The model to remove.</param>
            <returns>True if succeeds to remove model.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.Clear">
            <summary>
            Closes and removes all models in the list. Closes all windows.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModelsCollection.Contains(Autodesk.FileSystem.File)">
            <summary>
            Checks whether the models collection contains a model of the specified name.
            </summary>
            <param name="file">A Delcam file indicating the model to be found.</param>
            <returns>A boolean indicating whether the model has been found.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation">
            <summary>
            Captures an Annotation object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Annotation
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String,System.String,System.Double,Autodesk.Geometry.Point)">
            <summary>
            Creates a new annotation in PowwerSHAPE.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="text">The text to introduce in PowerShape.</param>
            <param name="fontName">
            The font type for the text (e.g. Arial, Times New Roman). The font Type must exist in
            PowerShape.
            </param>
            <param name="height">The font height.</param>
            <param name="position">The position of the text in the active workplane.</param>
            <remarks>The created text will have pitch of 0, text origin will be 'CENTRE' and text justification will be 'LEFT'.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String,System.String,System.Double,Autodesk.Geometry.Point,System.Double,Autodesk.ProductInterface.PowerSHAPE.TextJustifications,Autodesk.ProductInterface.PowerSHAPE.TextOrigins)">
            <summary>
            Creates a new annotation in PowwerSHAPE.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="text">The text to introduce in PowerShape.</param>
            <param name="fontName">
            The font type for the text (e.g. Arial, Times New Roman). The font Type must exist in
            PowerShape.
            </param>
            <param name="height">The font height.</param>
            <param name="pitch">The distance between each character in a line.</param>
            <param name="textJustification">
            The wanted justify option. This is how the text in the block aligns with the left and
            right margins.
            </param>
            <param name="textOrigin">
            The origin of the text block. The origin is the 'anchor point' used to position the text and
            can be set at any of the four corners of the text box, the mid points of the sides of the text box or the centre of the
            text box. Use the option menu to change the origin of the text.
            </param>
            <param name="position">The position of the text in the active workplane.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.BoundingBox">
            <summary>
            BoundingBox property is not valid for this type
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Text">
            <summary>
            Gets and sets the text of the Annotation.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Position">
            <summary>
            Gets and sets the position of the Annotation. Point with the position at which the text was placed.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Font">
            <summary>
            Gets and sets the font type name of the Annotation.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Height">
            <summary>
            Gets and sets the height of the characters.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Bold">
            <summary>
            Sets whether the text is Bold or not. A True value will set it to Bold.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Italic">
            <summary>
            Gets and sets whether the Annotation is italic.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Underline">
            <summary>
            Sets whether the Annotation is underlined.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Pitch">
            <summary>
            Sets the Pitch of the Annotation.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Spacing">
            <summary>
            Sets the Spacing of the Annotation. Spacing between lines of text.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Angle">
            <summary>
            Gets and sets the text Angle.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Horizontal">
            <summary>
            Gets and sets if text characters are Horizontal.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Justification">
            <summary>
            Gets and sets the Justification of the Annotation. This is how the text in the block aligns with the left and
            right margins.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Origin">
            <summary>
            Gets and sets the Origin of the Annotation. The origin is the 'anchor point' used to position the text and
            can be set at any of the four corners of the text box, the mid points of the sides of the text box or the centre of the
            text box.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Colour">
            <summary>
            Gets the number of the colour used by the text.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAnnotation.Delete">
            <summary>
            This operation deletes the Annotation from PowerSHAPE and removes it from the Annotations collection
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSArc">
            <summary>
            Captures an Arc object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Arc
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.MM)">
            <summary>
            Creates a full Arc (circle)
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.MM,Autodesk.Geometry.Degree)">
            <summary>
            Creates an Arc based on a start point, radius and span
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates an Arc based on a start point, end point and radius
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.MM,System.Single)">
            <summary>
            Creates an Arc based on all parameters
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.RenameCommand">
            <summary>
            Gets the command that'll be used to rename the Arc
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.Radius">
            <summary>
            Gets and sets the Radius of the Arc
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.Span">
            <summary>
            Gets and sets the span of the Arc in Degrees
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.Centre">
            <summary>
            Gets and sets the centre of the Arc
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.CentreOfGravity">
            <summary>
            Gets the Centre of Gravity of the arc
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.Through">
            <summary>
            Gets and sets the Through point of the Arc (approximately the mid point of the Arc)
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.MidPoint">
            <summary>
            Gets the midpoint of the Arc
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.Points">
            <summary>
            Gets the points on the Arc
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.NumberPoints">
            <summary>
            Overrides the NumberPoints property, as an arc will always have 2 points
            </summary>
            <returns>Always returns 2 as arcs have two points</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.StartAngle">
            <summary>
            Gets and sets the start angle of the Arc in Degrees
            </summary>
            <returns>Angle in degrees</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.EndAngle">
            <summary>
            Gets and sets the end angle of the Arc in Degrees
            </summary>
            <returns>Angle in degrees</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSArc.CentreNormal">
            <summary>
            Gets the vector of the normal to the arc plane
            </summary>
            <returns>Vector of the normal to the arc plane</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Delete">
            <summary>
            Deletes the Arc from PowerSHAPE and removes it from the Arcs collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Reverse">
            <summary>
            Reverses the direction of the Arc
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Full">
            <summary>
            Completes the Arc (equivalent of setting the span to 360 degrees)
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.ScaleToCurve(System.Double,System.Double,System.Double,Autodesk.Geometry.Point)">
            <summary>
            Scales an arc within PowerSHAPE, returning a curve.  This deletes the current arc.
            </summary>
            <param name="offsetX">Scale value in X</param>
            <param name="offsetY">Scale value in Y</param>
            <param name="offsetZ">Scale value in Z</param>
            <param name="scaleOrigin">Scale origin, workplane origin if none specified</param>
            <returns>Created arc</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single arc by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">First of the two absolute positions</param>
            <param name="pointToMoveTo">Second of the two absolute positions</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation</param>
            <returns>A list of arcs created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a single arc by a specified relative amount
            </summary>
            <param name="moveVector">The relative amount by which the arc will be moved</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>A list of arcs created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single arc by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">The axis around which the arc is are to be rotated</param>
            <param name="rotationAngle">The angle by which the arc is to be rotated</param>
            <param name="copiesToCreate">The number of copies to create of the original arc</param>
            <param name="rotationOrigin">The origin of the rotation axis</param>
            <returns>A list of arcs created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Offset(Autodesk.Geometry.MM,System.Int32)">
            <summary>
            This operation offsets a single arc by a specified distance
            </summary>
            <param name="offsetDistance">The distance by which to offset the mesh</param>
            <param name="copiesToCreate">The number of copies to be created from the operation</param>
            <returns>A list of offset arcs</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single arc in a specified plane
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the arc</param>
            <param name="mirrorPoint">The origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits an arc by a specified list of entities
            </summary>
            <param name="limitingEntity">The entity with which to perform the limiting operation</param>
            <param name="limitingMode">The mode in which to carry out the operation</param>
            <param name="keepOption">Whether to keep one or both sides of the limit</param>
            <param name="trimOption">Whether to trim one or all of the entities</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>A list of limited entities</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits an arc by a specified list of entities.
            </summary>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>A list of limited entities.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <returns>Limited entity</returns>
            <remarks>To be used with PSEntityLimiter.NextSolution</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSArc.Cut(Autodesk.Geometry.Point)">
            <summary>
            Cuts an arc at a specified point
            </summary>
            <param name="pointAtWhichToCut">The point at which to cut the arc - this must lie on the arc</param>
            <returns>The cut piece of the original arc</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSElectrode">
            <summary>
            Captures an Electrode object in PowerSHAPE
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSElectrode._material">
            <summary>
            Material that is currently applied to the Electrode
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Electrode.
            </summary>
            <param name="powerSHAPE">This is the PowerSHAPE Automation object.</param>
            <param name="id">The ID of the new model.</param>
            <param name="name">The name of the new model.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Material">
            <summary>
            Gets and Sets the material of the Electrode in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Datum">
            <summary>
            Gets the datum of the Electrode in PowerSHAPE based on the active Workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.UndersizeRough">
            <summary>
            Gets and sets the undersize rough value of the electrode
            </summary>
            <value>The undersize rough value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.UndersizeSemi">
            <summary>
            Gets and sets the undersize semi value of the electrode
            </summary>
            <value>The undersize semi value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.UndersizeFinish">
            <summary>
            Gets and sets the undersize finish value of the electrode
            </summary>
            <value>The undersize finish value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.QuantityRough">
            <summary>
            Gets and sets the quantity rough value of the electrode
            </summary>
            <value>The undersize rough value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.QuantitySemi">
            <summary>
            Gets and sets the quantity semi value of the electrode
            </summary>
            <value>The quantity semi value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.QuantityFinish">
            <summary>
            Gets and sets the quantity finish value of the electrode
            </summary>
            <value>The quantity finish value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.SparkGap">
            <summary>
            Gets and sets the spark gap of the electrode
            </summary>
            <value>The spark gap value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.SurfaceFinish">
            <summary>
            Gets and sets the surface finish of the electrode
            </summary>
            <value>The surface finish value</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.ProjectedArea">
            <summary>
            Gets the projected area of the Electrode
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BurnVector">
            <summary>
            Gets the direction of the electrode burn
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.VectorClearance">
            <summary>
            Gets the clearance distance from beginning of vector motion to start of burn
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.AngleA">
            <summary>
            Gets the A angle. Angle between projected burn vector in XY plane and X axis
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.AngleB">
            <summary>
            Gets the B angle. Angle between projected burn vector and Z axis. Normal Z sinking: B=0. Side sparking: B=90
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.AngleC">
            <summary>
            Gets the C angle. Rotation around burn vector. This is same as "Rotation" if ANGLE.B is 0
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BlankName">
            <summary>
            Gets the name of the blank
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.IsBlankRectangular">
            <summary>
            Gets whether or not the electrode is rectangular (or cylindrical)
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BlankLength">
            <summary>
            Gets the length of the electrode blank if it is rectangular
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BlankWidth">
            <summary>
            Gets the width of the electrode blank if it is rectangular
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BlankDiameter">
            <summary>
            Gets the diameter of the electrode blank if it is cylindrical
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BlankHeight">
            <summary>
            Gets the height of the electrode blank
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BlankMaterial">
            <summary>
            Gets the material of the electrode blank in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.BaseHeight">
            <summary>
            Gets the height of the electrode base
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Rotation">
            <summary>
            Gets the rotation of the electrode
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.IsCopy">
            <summary>
            Gets whether or not this electrode is a copy of another
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Parent">
            <summary>
            Gets the parent of this electrode.  If this electrode is not a copy then null is returned
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Copies">
            <summary>
            Gets the copies of this electrode
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.ActiveWorkplane">
            <summary>
            Gets the active workplane for the Electrode.  Returns null if none is selected.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.MachiningWorkplane">
            <summary>
            Gets the machining workplane for the Electrode.  Returns null if none is selected.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.ActiveSolid">
            <summary>
            Gets the active solid for the Electrode.  Returns null if none is selected.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Delete">
            <summary>
            Deletes the Electrode from PowerSHAPE and removes it from the Electrodes collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            This operation mirrors a single Electrode in a specified plane
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the Electrode</param>
            <param name="mirrorPoint">The origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            This operation moves a single Electrode by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions</param>
            <param name="pointToMoveTo">The second of the two absolute positions</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>A list containing the entity moved</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            This operation moves a single Electrode by a specified relative amount
            </summary>
            <param name="moveVector">The relative amount by which the Electrode will be moved</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>A list containing the entity moved</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            This operation rotates a single Electrode by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">The axis around which the Electrode is are to be rotated</param>
            <param name="rotationAngle">The angle by which the Electrode is to be rotated</param>
            <param name="copiesToCreate">The number of copies to create of the original Electrode</param>
            <param name="rotationOrigin">The origin of the rotation axis</param>
            <returns>A list of Electrodes created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.ScaleNonUniform(System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the Electrode a different amount in each axis
            </summary>
            <param name="scaleFactorX">Scale factor for the X axis</param>
            <param name="scaleFactorY">Scale factor for the Y axis</param>
            <param name="scaleFactorZ">Scale factor for the Z axis</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.ScaleProjectedVolume(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the Electrode to a projected volume
            </summary>
            <param name="newVolume">Volume to scale to</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSElectrode.ScaleUniform(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the Electrode the same amount in each axis
            </summary>
            <param name="scaleFactor">Scale factor for the axes</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSMesh">
            <summary>
            Captures a Mesh object in PowerSHAPE
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSMesh._material">
            <summary>
            Material that is currently applied to the Mesh
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSMesh._isSculpting">
            <summary>
            Indicates whether or not we are in a sculpting mode
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Mesh.
            </summary>
            <param name="powerSHAPE">This is the PowerSHAPE Automation object.</param>
            <param name="id">The ID of the new model.</param>
            <param name="name">The name of the new model.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.DMTModel)">
            <summary>
            Creates a new Mesh from a DMT Model.
            </summary>
            <param name="powerSHAPE">This is the PowerSHAPE Automation object.</param>
            <param name="model">The DMT model from which to create the model.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Material">
            <summary>
            Gets and Sets the material of the Mesh in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Centre">
            <summary>
            Gets and Sets the centre of the Mesh in PowerSHAPE based on the active Workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Area">
            <summary>
            Gets the area of the Mesh
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.NumberOfTriangles">
            <summary>
            Gets the number of triangles in the mesh
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMesh.NumberOfNodes">
            <summary>
            Gets the number of nodes in the mesh
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Delete">
            <summary>
            Deletes the Mesh from PowerSHAPE and removes it from the Meshes collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.CreateDraft(System.Double,System.Boolean)">
            <summary>
            Adds draft angles to the mesh down to the origin of the current workplane
            </summary>
            <param name="draftAngle">The draft angle to use</param>
            <param name="createWallsOnly">Whether or not to only add the draft walls</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.CreateBoundary(System.Int32,System.Int32)">
            <summary>
            Creates a boundary curve object
            </summary>
            <param name="location">Optional location defaulted to 1</param>
            <param name="smoothness">Optional smoothness defaulted to 0</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Append(Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Appends the specified Mesh to this Mesh. It will leave a single
            Mesh, deleting the specified one.
            </summary>
            <param name="meshToAppend">The mesh to be appended to this mesh</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Split">
            <summary>
            Splits the mesh into seperate meshes.  If the mesh cannot be divided further than itself then
            only one mesh (the start mesh) is returned.  Otherwise all the new created meshes are returned
            and this mesh fails to exist
            </summary>
            <returns>
            If the mesh cannot be divided further than itself then only one mesh (the start mesh) is
            returned.  Otherwise all the new created meshes are returned and this mesh fails to exist
            </returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.StitchTriangles(Autodesk.ProductInterface.PowerSHAPE.TriangleStitchIterationModes,System.Double,System.Double,System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Stitches the triangle mesh based on the specified values.
            </summary>
            <param name="iterationMode">The iteration mode is either Single or Multipass.</param>
            <param name="startTolerance">Default 0.1.</param>
            <param name="endTolerance">Default 0.1.</param>
            <param name="numberOfSteps">Default 10.</param>
            <param name="stitchFullMesh">If true, executes 'EXTRACTBOUNDARY' turning it off and executes 'REMOVECOINCIDENT' command according with 'removeCoincidentNodes' option.</param>
            <param name="removeCoincidentNodes">Executes 'REMOVECOINCIDENT' command turning it on or off.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.FillHole">
            <summary>
            Allows the user to select a hole on the mesh and fill it
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.StartSculpt(Autodesk.ProductInterface.PowerSHAPE.SculptTypes,System.Single,System.Single,System.Single,System.Boolean,System.Double,System.Boolean,System.Single)">
            <summary>
            Starts the interactive sculpting tool. It is finished
            or aborted using the ApplyScult and CancelSculpt operations
            </summary>
            <param name="sculptType">This is type of sculpt to apply</param>
            <param name="brushDiameter">This is the diameter of the brush</param>
            <param name="brushStrength">This is the strength of the sculpt</param>
            <param name="brushSmoothness">This is the smoothness of the sculpt</param>
            <param name="limitDeviation">This determines whether or not to limit the amount the sculpt will change the mesh</param>
            <param name="maximumDeviation">The maximum distance the sculpt will change the mesh by</param>
            <param name="refineTriangles">This determines whether or not to refine the triangles</param>
            <param name="refineTolerance">In conjunction with refineTriangles specifies the tolerance for refinement</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.AcceptSculpt">
            <summary>
            Accepts the last StartSculpt to the mesh
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.CancelSculpt">
            <summary>
            Cancels the last StartSculpt
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.RunMeshDoctor(Autodesk.ProductInterface.PowerSHAPE.MeshDoctorFixOptions,Autodesk.ProductInterface.PowerSHAPE.MeshDoctorRepairTypes)">
            <summary>
            Detects and fixes the faults in the mesh
            </summary>
            <param name="fixOption">This option determines the type of fix/operation the mesh doctor will do. If 'All' is selected it detects and fixes all types of faults, otherwise the Mesh Doctor identifies and fixes the select fault type. The option 'Status' gives the status of the faults.</param>
            <param name="repairType">This option allows to choose between an automation repair and an expand superfault option.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.ToDMTModel">
            <summary>
            Returns a DMT Model of the mesh
            </summary>
            <returns>A DMT Model of the Mesh</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.WriteToSTLFile(Autodesk.FileSystem.File)">
            <summary>
            Exports the mesh to the selected STL file
            </summary>
            <param name="file">The STL file name to export to</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.WriteToDMTFile(Autodesk.FileSystem.File)">
            <summary>
            Exports the mesh to the selected DMT file
            </summary>
            <param name="file">The DMT file name to export to</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a mesh by a specified list of entities
            </summary>
            <param name="limitingEntity">The entity with which to perform the limiting operation</param>
            <param name="limitingMode">The mode in which to carry out the operation</param>
            <param name="keepOption">Whether to keep one or both sides of the limit</param>
            <param name="trimOption">Whether to trim one or all of the entities</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>A list containing the limited entity</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            This operation limits a mesh by a specified list of entities
            </summary>
            <param name="limitingEntities">The entities with which to perform the limiting operation</param>
            <param name="limitingMode">The mode in which to carry out the operation</param>
            <param name="keepOption">Whether to keep one or both sides of the limit</param>
            <param name="trimOption">Whether to trim one or all of the entities</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>A list containing the limited entity</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <returns>Limited entity</returns>
            <remarks>To be used with PSEntityLimiter.NextSolution</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            This operation mirrors a single mesh in a specified plane
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the mesh</param>
            <param name="mirrorPoint">The origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            This operation moves a single mesh by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions</param>
            <param name="pointToMoveTo">The second of the two absolute positions</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>A list containing the entity moved</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            This operation moves a single mesh by a specified relative amount
            </summary>
            <param name="moveVector">The relative amount by which the mesh will be moved</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>A list containing the entity moved</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            This operation rotates a single mesh by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">The axis around which the mesh is are to be rotated</param>
            <param name="rotationAngle">The angle by which the mesh is to be rotated</param>
            <param name="copiesToCreate">The number of copies to create of the original mesh</param>
            <param name="rotationOrigin">The origin of the rotation axis</param>
            <returns>A list of meshs created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.Offset(Autodesk.Geometry.MM,System.Int32)">
            <summary>
            This operation offsets a single mesh by a specified distance
            </summary>
            <param name="offsetDistance">The distance by which to offset the mesh</param>
            <param name="copiesToCreate">The number of copies to be created from the operation</param>
            <returns>A list of offset meshes</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.ReduceToTolerance(System.Double,System.Boolean,Autodesk.Geometry.MM)">
            <summary>
            Reduces the Mesh maintaining the specified tolerance
            </summary>
            <param name="tolerace">Tolerance to maintain during reduction</param>
            <param name="limitTriangleEdgeLength">Whether or not to limit the length of edges</param>
            <param name="maximumEdgeLength">The maximum edge length to reduce to.  Only applies if limitTriangleEdgeLength is true</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.ReduceByPercentage(System.Double)">
            <summary>
            Reduces the Mesh by the specified percentage
            </summary>
            <param name="percentage">Percentage by which to reduce the mesh</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.ScaleNonUniform(System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the mesh a different amount in each axis
            </summary>
            <param name="scaleFactorX">Scale factor for the X axis</param>
            <param name="scaleFactorY">Scale factor for the Y axis</param>
            <param name="scaleFactorZ">Scale factor for the Z axis</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.ScaleProjectedVolume(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the mesh to a projected volume
            </summary>
            <param name="newVolume">Volume to scale to</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.ScaleUniform(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the mesh the same amount in each axis
            </summary>
            <param name="scaleFactor">Scale factor for the axes</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.AddEntityToEntity(Autodesk.ProductInterface.PowerSHAPE.IPSAddable,System.Boolean)">
            <summary>
            Adds an entity to another entity
            </summary>
            <param name="entityToAdd">Entity to be added</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the addition</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.AddEntitiesToEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSAddable},System.Boolean)">
            <summary>
            Adds entities to another entity
            </summary>
            <param name="entitiesToAdd">Collection of entities to be added</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the addition</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.IntersectEntityWithEntity(Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable,System.Boolean)">
            <summary>
            Intersects an entity with another entity
            </summary>
            <param name="entityToIntersect">Entity to intersect</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the intersection</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.IntersectEntitiesWithEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable},System.Boolean)">
            <summary>
            Intersects a collection of entities with another entity
            </summary>
            <param name="entitiesToIntersect">Entities to intersect</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the intersection</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.SubtractEntityFromEntity(Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable,System.Boolean)">
            <summary>
            Subtracts an entity from another entity
            </summary>
            <param name="entityToSubtract">Entity to subtract</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the subtraction</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMesh.SubtractEntitiesFromEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable},System.Boolean)">
            <summary>
            Subtracts a collection of entities from another entity
            </summary>
            <param name="entitiesToSubtract">Entities to subtract</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the subtraction</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSPoint">
            <summary>
            Captures a Point in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Point
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point)">
            <summary>
            Creates a new Point
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.RenameCommand">
            <summary>
            Gets the command that'll be used to rename the Point
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.BoundingBox">
            <summary>
            Gets the bounding box of the point.  The bounding box of a point has the same minimum bound as maximum bound
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Centre">
            <summary>
            Gets and sets the position of the point
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.X">
            <summary>
            Gets and sets the X coordinate of its relative position
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Y">
            <summary>
            Gets and sets the Y coordinate of its relative position
            </summary>
            <history>
            Who  When        Why
            ---  ----        ---
            EKM  27/05/2009  Initial version
            EKM  24/07/2009  Changed to take Identifier
            </history>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Z">
            <summary>
            Gets and sets the Z coordinate of its relative position
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Delete">
            <summary>
            Deletes the Point from PowerSHAPE and removes it from the Points collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.ToString">
            <summary>
            Returns a string representation of the coordinates of the point
            </summary>
            <returns>String of coordinates the format "X Y Z"</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.ToPoint">
            <summary>
            Returns the Point as a Geometry Point
            </summary>
            <returns>A geometry point representation of this point</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.ProjectPointOntoSurface(Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Projects the Point onto the specified surface
            </summary>
            <param name="surface">The surface onto which the Point is to be projected</param>
            <returns>A boolean indicating whether the proection was successful</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.DistanceTo(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Gets the distance between this entity and another
            </summary>
            <param name="otherEntity">The function returns the distance between this entity and the otherEntity</param>
            <exception cref="T:System.Exception">Failed to determine distance between objects</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.GetNearestSurface(Autodesk.Geometry.Point@,System.Boolean)">
            <summary>
            Gets the nearest surface to this point as well as the nearest point on that surface
            </summary>
            <param name="nearestPoint">Returns the nearest point on the nearest surface. Or null if the nearest surface cannot be found</param>
            <param name="useWorldCoordinates">Whether or not to return the nearest point on the surface in world coordinates</param>
            <returns>The nearest surface or null if the nearest surface cannot be found</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            This operation moves a single point by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions</param>
            <param name="pointToMoveTo">The second of the two absolute positions</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>List of points created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            This operation moves a single point by a specified relative amount
            </summary>
            <param name="moveVector">Relative amount by which the point will be moved</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation</param>
            <returns>A list of points created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            This operation mirrors a single point in a specified plane
            </summary>
            <param name="mirrorPlane">Plane about which to mirror the point</param>
            <param name="mirrorPoint">Origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSPoint.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            This operation rotates a single point by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">Axis around which the point is are to be rotated</param>
            <param name="rotationAngle">Angle by which the point is to be rotated</param>
            <param name="copiesToCreate">Number of copies to create of the original point</param>
            <param name="rotationOrigin">Origin of the rotation axis</param>
            <returns>List of points created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolid">
            <summary>
            Captures an Solid object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Connects to PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Solid
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Creates a Solid from a mesh
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve,System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve})">
            <summary>
            Creates a Solid from a drive curve and a number of sections
            </summary>
            <param name="powerSHAPE">The instance of PowerSHAPE being used</param>
            <param name="driveCurve">The drive curve along which to create the solid</param>
            <param name="sections">The sections through which to create the solid</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Level">
            <summary>
            Gets and sets the level the solid is on
            </summary>
            <returns></returns>
            <value></value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsActive">
            <summary>
            Gets and sets whether the Solid is the active solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Name">
            <summary>
            Get and sets solid name in PowerShape and in Custom Core entity.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.RepresentationNumber">
            <summary>
            Gets the representation number of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Volume">
            <summary>
            Gets the volume of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Area">
            <summary>
            Gets the area of the surfaces in the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.CentreOfGravity">
            <summary>
            Gets the coordinates of the centre of gravity of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.MomentOfInertia">
            <summary>
            Gets the moment of inertia of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Thickness">
            <summary>
            Gets the mean thickness of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsHidden">
            <summary>
            Gets whether the Solid is hidden
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsWatertight">
            <summary>
            Gets whether the Solid is watertight
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsTrimmingValid">
            <summary>
            Gets whether the Solid boundaries are valid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Version">
            <summary>
            Gets and sets whether the solid is a version 8 or parasolid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Type">
            <summary>
            Gets the type of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsConnected">
            <summary>
            Gets whether the solid is connected
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfSurfaces">
            <summary>
            Gets the number of surfaces in the solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfFeatures">
            <summary>
            Gets the number of features in the solid, not including sub-branches
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfFeaturesInclSubBranches">
            <summary>
            Gets the number of features in the solid, including sub-branches
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfSelectedFeatures">
            <summary>
            Gets the number of features in the solid, not including sub-branches
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfErrorSuppressedFeatures">
            <summary>
            Gets the number of error-suppressed features in the solid's tree
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfRedefinedFeatures">
            <summary>
            Gets the number of features that were replayed during the last tree redefinition
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfGroupFeatures">
            <summary>
            Gets the number of group features in the solid, not including sub-branches
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberOfGroupFeaturesInclSubBranches">
            <summary>
            Gets the number of group features in the solid, including sub-branches
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsClosed">
            <summary>
            Gets whether the solid is closed
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IsGhost">
            <summary>
            Gets whether the solid is a ghost
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberLinkedHalfEdges">
            <summary>
            Gets the number of linked half-edges in the solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberUnlinkedHalfEdges">
            <summary>
            Gets the number of unlinked half-edges in the solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberVerticesAlongEdges">
            <summary>
            Gets the number of vertices along edges in the solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.AverageEdgeTolerance">
            <summary>
            Gets the average edge tolerance of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.MaximumEdgeTolerance">
            <summary>
            Gets the maximum edge tolerance of the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.NumberAnalyticSurfaces">
            <summary>
            Gets the number of analytic surfaces in the Solid
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.HalfEdgeTolerance">
            <summary>
            Gets the tolerance to which the Solid's half edges are known to link
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Material">
            <summary>
            Gets and Sets the material of the Solid in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Delete">
            <summary>
            Deletes the Solid from PowerSHAPE and removes it from the Solids collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.ToDMTModel">
            <summary>
            Returns a DMT Model of the solid
            </summary>
            <returns>A DMT Model of the solid</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.WriteToSTLFile(Autodesk.FileSystem.File)">
            <summary>
            Exports the solid to the selected STL file
            </summary>
            <param name="file">The STL file name to export to</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.WriteToDMTFile(Autodesk.FileSystem.File)">
            <summary>
            Exports the solid to the selected DMT file
            </summary>
            <param name="file">The DMT file name to export to</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.SplitSolidWithSurface(Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Splits the solid with a surface
            </summary>
            <param name="surfaceForSplit">The surface with which to split the solid</param>
            <returns>A list of the solid(s) created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.FilletEdges(Autodesk.Geometry.MM)">
            <summary>
            Applies a defined fillet to edges manually selected by the user
            </summary>
            <param name="radius">The desired radius of the fillet</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.GetSolidType(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32)">
            <summary>
            Gets the solid type, so removing the code from the property and removing the
            chance that the property can throw an exception
            </summary>
            <param name="powerSHAPE">The current instance of PowerSHAPE</param>
            <param name="id">The ID of the solid to interrogate</param>
            <returns>The type of the solid as a SolidType</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.ReverseNormal">
            <summary>
            Reverses the normal of the Surface
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a solid by a specified list of entities
            </summary>
            <param name="limitingEntity">The entity with which to perform the limiting operation</param>
            <param name="limitingMode">The mode in which to carry out the operation</param>
            <param name="keepOption">Whether to keep one or both sides of the limit</param>
            <param name="trimOption">Whether to trim one or all of the entities</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>List of solids created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a solid by a specified list of entities.
            </summary>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>List of solids created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <returns>Limited entity</returns>
            <remarks>To be used with PSEntityLimiter.NextSolution</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            This operation mirrors a single solid in a specified plane
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the solid</param>
            <param name="mirrorPoint">The origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            This operation moves a single solid by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions</param>
            <param name="pointToMoveTo">The second of the two absolute positions</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>List of solids created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            This operation moves a single solid by a specified relative amount
            </summary>
            <param name="moveVector">The relative amount by which the solid will be moved</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
            <returns>List of solids created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            This operation rotates a single solid by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">The axis around which the solid is are to be rotated</param>
            <param name="rotationAngle">The angle by which the solid is to be rotated</param>
            <param name="copiesToCreate">The number of copies to create of the original solid</param>
            <param name="rotationOrigin">The origin of the rotation axis</param>
            <returns>A list of solids created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.Offset(Autodesk.Geometry.MM,System.Int32)">
            <summary>
            This operation offsets a single solid by a specified distance
            </summary>
            <param name="offsetDistance">The distance by which to offset the solid</param>
            <param name="copiesToCreate">The number of copies to be created from the operation</param>
            <returns>A list of offset solids</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.ScaleUniform(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the solid the same amount in each axis
            </summary>
            <param name="scaleFactor">Scale factor for the axes</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.ScaleNonUniform(System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the solid a different amount in each axis
            </summary>
            <param name="scaleFactorX">Scale factor for the X axis</param>
            <param name="scaleFactorY">Scale factor for the Y axis</param>
            <param name="scaleFactorZ">Scale factor for the Z axis</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.ScaleProjectedVolume(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales the solid to a projected volume
            </summary>
            <param name="newVolume">Volume to scale to</param>
            <param name="lockX">Whether to use the X scale or not</param>
            <param name="lockY">Whether to use the Y scale or not</param>
            <param name="lockZ">Whether to use the Z scale or not</param>
            <param name="scaleOrigin">Origin for the scale operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.AddEntityToEntity(Autodesk.ProductInterface.PowerSHAPE.IPSAddable,System.Boolean)">
            <summary>
            Adds an entity to another entity
            </summary>
            <param name="entityToAdd">Entity to be added</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the addition</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.AddEntitiesToEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSAddable},System.Boolean)">
            <summary>
            Adds entities to another entity
            </summary>
            <param name="entitiesToAdd">Collection of entities to be added</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the addition</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IntersectEntityWithEntity(Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable,System.Boolean)">
            <summary>
            Intersects an entity with another entity
            </summary>
            <param name="entityToIntersect">Entity to intersect</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the intersection</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.IntersectEntitiesWithEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable},System.Boolean)">
            <summary>
            Intersects a collection of entities with another entity
            </summary>
            <param name="entitiesToIntersect">Entities to intersect</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the intersection</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.SubtractEntityFromEntity(Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable,System.Boolean)">
            <summary>
            Subtracts an entity from another entity
            </summary>
            <param name="entityToSubtract">Entity to subtract</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the subtraction</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolid.SubtractEntitiesFromEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable},System.Boolean)">
            <summary>
            Subtracts a collection of entities from another entity
            </summary>
            <param name="entitiesToSubtract">Entities to subtract</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False</param>
            <returns>Entity created from the subtraction</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidFactory">
            <summary>
            Creates instance solids based on a string identifying a solid's type in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidFactory.CreateSolid(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Creates instance solids based on a string identifying a solid's type in PowerSHAPE
            </summary>
            <param name="powerSHAPE">PowerSHAPE instance</param>
            <param name="id">ID of the new solid</param>
            <param name="name">Name of the new solid</param>
            <returns>Solid with type requested</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSolidFactory.CreateSolid(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String,System.String)">
            <summary>
            Creates instance solids based on a string identifying a solid's type in PowerSHAPE
            </summary>
            <param name="powerSHAPE">PowerSHAPE instance</param>
            <param name="id">ID of the new solid</param>
            <param name="name">Name of the new solid</param>
            <returns>Solid with type requested</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurface">
            <summary>
            Captures an Surface object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Connects to PowerSHAPE
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Surface.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="id">The surface ID.</param>
            <param name="name">The surface name.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.RenameCommand">
            <summary>
            Gets the command that will be used to rename the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Type">
            <summary>
            Gets the type of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.IsTrimmed">
            <summary>
            Gets and sets the Trim status of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.IsTrimmingValid">
            <summary>
            Gets the Trim validity of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Direction">
            <summary>
            Gets the direction of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Area">
            <summary>
            Gets the area of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Volume">
            <summary>
            Gets the volume of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Shape">
            <summary>
            Gets the primitive shape of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.CentreOfGravity">
            <summary>
            Gets the coordinates of the centre of gravity of the Surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.NumberOfLaterals">
            <summary>
            Gets the number of laterals on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.NumberOfLongitudinals">
            <summary>
            Gets the number of longitudinals on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.IsClosedLaterals">
            <summary>
            Gets and sets whether the Surface laterals are closed.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.IsClosedLongitudinals">
            <summary>
            Gets and sets whether the Surface longitudinals are closed.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.HasSpine">
            <summary>
            Gets whether the surface has a spine.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.NumberOfBoundaries">
            <summary>
            Gets the number of boundaries on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.NumberOfPCurves">
            <summary>
            Gets the number of pCurves on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Laterals">
            <summary>
            Gets the list of laterals on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Longitudinals">
            <summary>
            Gets the list of longitudinals on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.PCurves">
            <summary>
            Gets a list of the PCurves on the surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Material">
            <summary>
            Gets and Sets the material of the Surface in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetSurfaceType(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32)">
            <summary>
            Gets the surface type, so removing the code from the property and removing the
            chance that the property can throw an exception.
            </summary>
            <param name="powerSHAPE">The current instance of PowerSHAPE.</param>
            <param name="id">The ID of the surface to interrogate.</param>
            <returns>The type of the surface as a SurfaceType.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetSurfacePoint(System.Double,System.Double)">
            <summary>
            Gets the coordinates of a position on the surface defined by TU
            paremeters.
            </summary>
            <param name="t">The t parameter of the chosen surface position.</param>
            <param name="u">The u parameter of the chosen surface position.</param>
            <returns>A point representing the coordinates of the chosen position.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetSurfacePoint(System.Double[])">
            <summary>
            Gets the coordinates of a position on the surface defined byb TU parameters.
            </summary>
            <param name="TUParameters">A double array containing the TU parameters of the chosen surface position.</param>
            <returns>A point representing the coordinates of the chosen position.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetNearestTUParameters(Autodesk.Geometry.Point,System.Single,System.Single)">
            <summary>
            Gets the nearest TU parameters to an external point.
            </summary>
            <param name="referencePoint">Reference point that can lie anywhere in space.</param>
            <param name="guessT">Optional estimate T to speed up calculation times.</param>
            <param name="guessU">Optional estimate U to speed up calculation times.</param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetNormal(System.Single,System.Single)">
            <summary>
            Gets the normal of the Surface at the specified point (default is centre of surface).
            </summary>
            <param name="t">T coordinate of point on surface.</param>
            <param name="u">U coordinate of point on surface.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetNearestNormal(Autodesk.Geometry.Point)">
            <summary>
            Gets the normal of the surface a the point nearest to the specified reference point
            </summary>
            <param name="referencePoint">The reference point to find the nearest point to</param>
            <returns>The normal of the surface a the point nearest to the specified reference point</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.DistanceTo(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Gets the distance between this entity and another
            </summary>
            <param name="otherEntity">The function returns the distance between this entity and the otherEntity</param>
            <exception cref="T:System.Exception">Failed to determine distance between objects</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.NearestPoint(Autodesk.Geometry.Point)">
            <summary>
            Gets the nearest point on the surface compared to the specified point
            </summary>
            <param name="point">The function returns the distance between this specified point and the surface</param>
            <exception cref="T:System.Exception">Failed to determine nearest point</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetMinCurvature(System.Double,System.Double)">
            <summary>
            Gets the minimum curvature at a position defined by TU parameters.
            </summary>
            <param name="t">The t parameter of the chosen surface position.</param>
            <param name="u">The u parameter of the chosen surface position.</param>
            <returns>The minimum curvature at the chosen position.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.GetMaxCurvature(System.Double,System.Double)">
            <summary>
            Gets the maximum curvature at a position defined by TU parameters.
            </summary>
            <param name="t">The t parameter of the chosen surface position.</param>
            <param name="u">The u parameter of the chosen surface position.</param>
            <returns>The maximum curvature at the chosen position.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.CreateSmartSurface(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfacingMethods,Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfaceTypes,Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions)">
            <summary>
            Creates a new Surface using PowerSHAPE's automatic surfacing
            methods.  Any necessary wireframe must already be selected.
            </summary>
            <param name="powerSHAPE">Instance of PowerSHAPE.</param>
            <param name="automaticSurfacingMethod">AutomaticSurfacingMethods enum value for surface method.</param>
            <param name="automaticSurfaceType">AutomaticSurfaceTypes enum value for surface type.</param>
            .
            <param name="advancedSurfaceOptions">SurfaceAdvancedOptions object for advanced options.</param>
            <returns>New surface created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.CreateFillInSurface(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve)">
            <summary>
            Creates a fillin surface from a composite curve or curve.
            </summary>
            <param name="powerSHAPE">The PowerSHAPE Automation object.</param>
            <param name="genericCurve">
            The composite curve or curve from which to create.
            the fillin surface.
            </param>
            <returns>New surface created by the operation.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Delete">
            <summary>
            Deletes the Surface from PowerSHAPE and removes it from the Surfaces collection.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.ReverseSurfaceNormal">
            <summary>
            Reverses the normal of the Surface.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Extend(Autodesk.ProductInterface.PowerSHAPE.ExtensionEdges,System.Double,Autodesk.ProductInterface.PowerSHAPE.ExtensionType)">
            <summary>
            Extends one edge of the Surface.
            </summary>
            <param name="edge">The option for the surface extension.</param>
            <param name="length">The extension length.</param>
            <param name="straightCurved">The straight curved.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.ConvertSurfaceToPowerSurface">
            <summary>
            Converts the indicated surface curves to be wireframe.  Curves can only
            be converted in one direction at once.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Offset(System.Single,Autodesk.ProductInterface.PowerSHAPE.OffsetCornerTypes,Autodesk.ProductInterface.PowerSHAPE.OffsetSplitAtDiscontinuity)">
            <summary>
            Offsets the surface along its normal by the desired distance, returning
            a PowerSurface.  Because the type of the surface might have changed, this object no longer
            exists - any subsequent operations must be carried out on the returned surface.
            </summary>
            <param name="distanceToOffset">The distance to offset the surface.</param>
            <param name="cornerBehaviour">The desired behaviour off the offset surface at corners.</param>
            <param name="discontinuityBehaviour">The desired behaviour of the offset surface when the operation produces a discontinuity.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Scale(System.Double,System.Double,System.Double,Autodesk.Geometry.Point)">
            <summary>
            Scales a surface within PowerSHAPE, returning a PowerSurface.  Because the type of
            the surface might have changed, this object no longer exists - any subsequent operations must be
            carried out on the returned surface.
            </summary>
            <param name="offsetX">Scale value in X.</param>
            <param name="offsetY">Scale value in Y.</param>
            <param name="offsetZ">Scale value in Z.</param>
            <param name="scaleOrigin">Scale origin, workplane origin if none specified.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.StitchToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAcross,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAlong,System.Single,Autodesk.ProductInterface.PowerSHAPE.StitchTypes)">
            <summary>
            Contains the code to stitch a surface to other entities.
            </summary>
            <param name="entityToStitchTo">The target surface to stitch to.</param>
            <param name="surfaceCurveToStitch">The surface curve to stitch on the selected surface.</param>
            <param name="directionAcross">Match across seam option.</param>
            <param name="directionAlong">Match along seam option.</param>
            <param name="stitchingTolerance">This value is the size of the largest gap to stitch. If the stitch point has to move a distance greater than this value, then this point is not moved onto the target.</param>
            <param name="stitchType">This allows you to choose the type of the target from one of the following: Curves, Surfaces, Surface curves.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.StitchToCurve(Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve,Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAcross,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAlong,System.Single)">
            <summary>
            Stitches the surface to a curve or compcurve.
            </summary>
            <param name="curveToStitchTo">The curve to stitch to.</param>
            <param name="surfaceCurveToStitch">The surface curve to stitch on the selected surface.</param>
            <param name="directionAcross">Indicates whether the points should be matched across the stitch.</param>
            <param name="directionAlong">Indicates whether the points should be matched along the stitch.</param>
            <param name="stitchingTolerance">The tolerance to stitch to.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.StitchToSurface(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAcross,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAlong,System.Single)">
            <summary>
            Stitches the surface to another surface.
            </summary>
            <param name="surfaceToStitchTo">The surface to stitch to.</param>
            <param name="surfaceCurveToStitch">The surface curve to stitch on the selected surface.</param>
            <param name="directionAcross">Indicates whether the points should be matched across the stitch.</param>
            <param name="directionAlong">Indicates whether the points should be matched along the stitch.</param>
            <param name="stitchingTolerance">The tolerance to stitch to.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.StitchToSurfaceCurve(Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve,Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAcross,Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAlong,System.Single)">
            <summary>
            Stitches the surface to a surface curve.
            </summary>
            <param name="surfaceCurveToStitchTo">The surface curve to stitch to.</param>
            <param name="surfaceCurveToStitch">The surface curve to stitch on the selected surface.</param>
            <param name="directionAcross">Indicates whether the points should be matched across the stitch.</param>
            <param name="directionAlong">Indicates whether the points should be matched along the stitch.</param>
            <param name="stitchingTolerance">The tolerance to stitch to.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.AppendToSurface(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve)">
            <summary>
            Appends another surface onto this surface, retaining this surface.
            </summary>
            <param name="surfacetoAppendTo">The surface to append onto this surface.</param>
            <param name="curveToAppend">The surface curve on this surface to use as the append point.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single surface in a specified plane.
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the surface.</param>
            <param name="mirrorPoint">The origin of the mirror plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single surface by the relative distance between two absolute positions.
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions.</param>
            <param name="pointToMoveTo">The second of the two absolute positions.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a single surface by a specified relative amount.
            </summary>
            <param name="moveVector">The relative amount by which the surface will be moved.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single surface by a specified angle around a specified axis.
            </summary>
            <param name="rotationAxis">The axis around which the surface is are to be rotated.</param>
            <param name="rotationAngle">The angle by which the surface is to be rotated.</param>
            <param name="copiesToCreate">The number of copies to create of the original surface.</param>
            <param name="rotationOrigin">The origin of the rotation axis.</param>
            <returns>A list of surfaces created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a surface by a specified list of entities.
            </summary>
            <param name="limitingEntity">The entity with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a surface by a specified list of entities.
            </summary>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>The entities produced by the limiting operation.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <returns>Limited entity.</returns>
            <remarks>To be used with PSEntityLimiter.NextSolution.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SelectSurfaceCurves(Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypes,System.Int32[])">
            <summary>
            Selects one or more curves on the Surface.
            </summary>
            <param name="surfaceCurveType">The surface direction option for a surface curve.</param>
            <param name="curveNumbers">The curves to select.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SelectLateralAndLongitudinalSurfaceCurves(System.Int32[],System.Int32[])">
            <summary>
            Selects one or more lateral and longitudinal curves on the Surface.
            </summary>
            <param name="lateralCurveNumbers">The lateral curves to select.</param>
            <param name="longitudinalCurveNumbers">The longitudinal curves to select.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SelectSurfaceCurves(Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve[])">
            <summary>
            Selects one or more curves on the Surface.
            </summary>
            <param name="surfaceCurves">The specific surface curves to select.</param>
            <remarks>This operation can select any combination of laterals and longitudinals on one surface.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.AddSurfaceCurveByParameter(Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypes,System.Single)">
            <summary>
            Adds a new surface curve at the point indicated.
            </summary>
            <param name="latOrLon">The surface direction option for a surface curve.</param>
            <param name="creationPoint">The creation point.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.ConvertSurfaceCurvesToWireframe(Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypes,System.Int32[])">
            <summary>
            Converts the indicated surface curves to be wireframe.  Curves can only
            be converted in one direction at once.
            </summary>
            <param name="latOrLon">The SurfaceCurveTypes enum differentiates between a Lateral or a Longitudinal.</param>
            <param name="curveNumbers">This is the list of curve numbers to be converted to wireframe.</param>
            <returns>The compcurve(s) created by the conversion operation.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SwapSurfaceCurves">
            <summary>
            Swaps the laterals and longitudinals of a surface - laterals become longitudinals and longitudinals become laterals.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.ReverseDirectionOfSurfaceCurves">
            <summary>
            Reverses the direction of the surface curves.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SelectBoundary(System.Int32)">
            <summary>
            Selects a boundary on the surface.  It is private because it doesn't switch off
            trim region editing after completion.
            </summary>
            <param name="index">The index of the boundary to be selected.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.DeleteBoundary(System.Int32)">
            <summary>
            Operation deletes a boundary from the surface and then switches trim region editing off.
            </summary>
            <param name="index">The index of the boundary to delete.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.ConvertBoundaryToCompCurve(System.Int32)">
            <summary>
            Converts a boundary on a surface into a composite curve.
            </summary>
            <param name="index">The index of the boundary to convert.</param>
            <returns>The compcurve created from the boundary.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.AddEntityToEntity(Autodesk.ProductInterface.PowerSHAPE.IPSAddable,System.Boolean)">
            <summary>
            Adds an entity to another entity.
            </summary>
            <param name="entityToAdd">Entity to be added.</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False.</param>
            <returns>Entity created from the addition.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.AddEntitiesToEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSAddable},System.Boolean)">
            <summary>
            Adds entities to another entity.
            </summary>
            <param name="entitiesToAdd">Collection of entities to be added.</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False.</param>
            <returns>Entity created from the addition.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.IntersectEntityWithEntity(Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable,System.Boolean)">
            <summary>
            Intersects an entity with another entity.
            </summary>
            <param name="entityToIntersect">Entity to intersect.</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False.</param>
            <returns>Entity created from the intersection</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.IntersectEntitiesWithEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable},System.Boolean)">
            <summary>
            Intersects a collection of entities with another entity.
            </summary>
            <param name="entitiesToIntersect">Entities to intersect.</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False.</param>
            <returns>Entity created from the intersection</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SubtractEntityFromEntity(Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable,System.Boolean)">
            <summary>
            Subtracts an entity from another entity.
            </summary>
            <param name="entityToSubtract">Entity to subtract.</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False.</param>
            <returns>Entity created from the sub.traction.</returns>
            .
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurface.SubtractEntitiesFromEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable},System.Boolean)">
            <summary>
            Subtracts a collection of entities from another entity.
            </summary>
            <param name="entitiesToSubtract">Entities to subtract.</param>
            <param name="copeWithCoincidentFaces">Optional boolean defaults to False.</param>
            <returns>Entity created from the subtraction.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions">
            <summary>
            Contains advanced surface options that can be used when creating surfaces.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions.EdgeMatchingOption">
            <summary>
            The edge matching option to control how PowerSHAPE adds extra surface points and curves to the initial network so that each point lies at the junction of a lateral and a longitudinal.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions.InteriorInterpolation">
            <summary>
            The interior interpolation methods option for surface creation.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions.CornerTolerance">
            <summary>
            The corner tolerance.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.SurfaceAdvancedOptions.#ctor(System.Nullable{Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfaceOptions},System.Nullable{Autodesk.ProductInterface.PowerSHAPE.AdvancedInteriorInterpolationMethods},System.Nullable{System.Double})">
            <summary>
            Initialises a new instance of the PSSurface. SurfaceAdvancedOptions class.
            </summary>
            <param name="aEdgeMatchingOption">The edge matching option to control how PowerSHAPE adds extra surface points and curves to the initial network so that each point lies at the junction of a lateral and a longitudinal.</param>
            <param name="aInteriorInterPolation">The interior interpolation methods option for surface creation.</param>
            <param name="aCornerTolerance">The corner tolerance.</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypesExtensions">
            <summary>
            Contains all extension methods for the SurfaceCurveTypes enumeration.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypesExtensions.ToShortString(Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypes)">
            <summary>
            Returns short forms of the surface curve type for insertion into macro code.
            </summary>
            <param name="inputSurfaceCurveType">The surface curve type to convert to short string.</param>
            <returns>The short string to the input surface type (e.g. Lateral will be 'LATS').</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypesExtensions.ToLongString(Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypes)">
            <summary>
            Returns long forms of the surface curve type for insertion into macro code.
            </summary>
            <param name="inputSurfaceCurveType">The surface curve type to convert to long string.</param>
            <returns>Long surface type name (e.g. Lateral will be 'LATERAL').</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceFactory">
            <summary>
            Creates instance surfaces based on a string identifying a surface's type in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceFactory.CreateSurface(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Creates instance surfaces based on a string identifying a surface's type in PowerSHAPE
            </summary>
            <param name="powerSHAPE">PowerSHAPE instance to create the surface in</param>
            <param name="id">ID for the new surface</param>
            <param name="name">Name for the new surface</param>
            <returns>New surface created by the operation</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceFactory.CreateSurface(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String,System.String)">
            <summary>
            Creates instance surfaces based on a string identifying a surface's type in PowerSHAPE
            </summary>
            <param name="powerSHAPE">PowerSHAPE instance to create the surface in</param>
            <param name="id">ID for the new surface</param>
            <param name="name">Name for the new surface</param>
            <returns>New surface created by the operation</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSWireframe">
            <summary>
            Captures a wire frame model in PowerSHAPE
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Connects to PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Connects to PowerSHAPE and a specific entity using its name
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.StartPoint">
            <summary>
            Gets the start point of the wireframe
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.EndPoint">
            <summary>
            Gets the end point of the wireframe
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.NumberPoints">
            <summary>
            Gets the number of points in the wireframe
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.Points">
            <summary>
            Gets the points on the Wireframe
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.Point(System.Int32)">
            <summary>
            Gets the point at the specified zero based index
            </summary>
            <param name="index">The index of the required point</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.Length">
            <summary>
            Gets the length of the wireframe
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.CentreOfGravity">
            <summary>
            Gets the centre of gravity of the wireframe
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWireframe.ProjectOntoSurface(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.ProjectionType,System.Boolean)">
            <summary>
            Projects a Curve onto a surface.
            </summary>
            <param name="surface">The surface to wrap onto.</param>
            <param name="projectionType">The type of projection to be carried out.</param>
            <param name="keepOriginal">If true, it deletes the original entity.</param>
            <remarks>The old CompCurve is removed, and this object's ID set to be the new ID.</remarks>
            <returns>List of entities created by the operation.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane">
            <summary>
            Captures an Workplane object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Workplane
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Workplane)">
            <summary>
            Initialises the Workplane using the properties of a
            Autodesk.Geometry workplane
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates a workplane from three points
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.NewWorkplaneInEntityPositions)">
            <summary>
            Creates a workplane that doesn't need an origin
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.Geometry.Point)">
            <summary>
            Creates a workplane aligned to an entity
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point)">
            <summary>
            Creates a workplane aligned to the current view at the specified origin
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.BoundingBox">
            <summary>
            Overrides the BoundingBox property to return a box of volume 0 at the workplane origin
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.IsActive">
            <summary>
            Gets the active status of workplane.  To set a workplane active use the ActiveWorkplane
            property on the Model
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.RenameCommand">
            <summary>
            Defines the command that'll be used to rename the workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.Origin">
            <summary>
            Gets and sets the origin of the workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.IsLocked">
            <summary>
            Gets and sets whether the workplane is locked
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.XAxis">
            <summary>
            Gets and sets the Vector that represents the X Axis for the Workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.YAxis">
            <summary>
            Gets and sets the Vector that represents the Y Axis for the Workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.ZAxis">
            <summary>
            Gets and sets the Vector that represents the Z Axis for the Workplane
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.Delete">
            <summary>
            Deletes the Workplane from PowerSHAPE and removes it from the Workplanes collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.ToWorkplane">
            <summary>
            Gets a Geometry Workplane that represents the workplane
            </summary>
            <returns>The Geometry Workplane that represents the workplane</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.AlignToView">
            <summary>
            Aligns the workplane to the current view in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single workplane by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions</param>
            <param name="pointToMoveTo">The second of the two absolute positions</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a single workplane by a specified relative amount
            </summary>
            <param name="moveVector">The relative amount by which the workplane will be moved</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single workplane by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">The axis around which the workplane is are to be rotated</param>
            <param name="rotationAngle">The angle by which the workplane is to be rotated</param>
            <param name="copiesToCreate">The number of copies to create of the original workplane</param>
            <param name="rotationOrigin">The origin of the rotation axis</param>
            <returns>A list of workplanes created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWorkplane.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single workplane in a specified plane
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the workplane</param>
            <param name="mirrorPoint">The origin of the mirror plane</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock">
            <summary>
            Captures a solid block in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.Height">
            <summary>
            Gets and Sets the height of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.Length">
            <summary>
            Gets and Sets the length of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.Width">
            <summary>
            Gets and Sets the width of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.DraftAngle1">
            <summary>
            Gets and Sets draft angle 1 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.DraftAngle2">
            <summary>
            Gets and Sets draft angle 2 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.DraftAngle3">
            <summary>
            Gets and Sets draft angle 3 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidBlock.DraftAngle4">
            <summary>
            Gets and Sets draft angle 4 of the Block
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidCone">
            <summary>
            Captures a solid cone in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidCone.Length">
            <summary>
            Gets and Sets the length of the cone
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidCone.TopRadius">
            <summary>
            Gets and Sets the top radius of the cone
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidCone.BaseRadius">
            <summary>
            Gets and Sets the base radius of the cone
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidCylinder">
            <summary>
            Captures a solid cylinder in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidCylinder.Radius">
            <summary>
            Gets and Sets the radius of the cylinder
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidCylinder.Length">
            <summary>
            Gets and Sets the length of the cylinder
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidExtrusion">
            <summary>
            Captures a solid extrusion in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidExtrusion.Length">
            <summary>
            Gets and Sets the length of the extrusion
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidExtrusion.NegativeLength">
            <summary>
            Gets and Sets the negative length of the extrusion
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidExtrusion.DraftAngle">
            <summary>
            Gets and Sets the draft angle of the extrusion
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidPlane">
            <summary>
            Captures a solid plane in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidPlane.Length">
            <summary>
            Gets and Sets the length of the Plane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidPlane.Width">
            <summary>
            Gets and Sets the width of the Plane
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidRevolution">
            <summary>
            Captures a solid revolution in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidRevolution.Angle">
            <summary>
            Gets and Sets the angle of the revolution
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidSphere">
            <summary>
            Captures a solid sphere in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidSphere.Radius">
            <summary>
            Gets and Sets the radius of the sphere in MM
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidSpring">
            <summary>
            Captures a solid spring in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidSpring.TopRadius">
            <summary>
            Gets and Sets the top radius of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidSpring.BaseRadius">
            <summary>
            Gets and Sets the base radius of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidSpring.Height">
            <summary>
            Gets and Sets the height of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidSpring.Pitch">
            <summary>
            Gets and Sets the pitch of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSolidSpring.Turns">
            <summary>
            Gets and Sets the turns of the spring
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSolidTorus">
            <summary>
            Captures a solid torus in PowerSHAPE
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock">
            <summary>
            Captures a Surface Block object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.Height">
            <summary>
            Gets and Sets the height of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.Length">
            <summary>
            Gets and Sets the length of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.Width">
            <summary>
            Gets and Sets the width of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.DraftAngle1">
            <summary>
            Gets and Sets draft angle 1 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.DraftAngle2">
            <summary>
            Gets and Sets draft angle 2 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.DraftAngle3">
            <summary>
            Gets and Sets draft angle 3 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.DraftAngle4">
            <summary>
            Gets and Sets draft angle 4 of the Block
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceBlock.Volume">
            <summary>
            Gets the volume of the Block, which is the height x width x length, not
            0 as returned by PowerSHAPE
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCone">
            <summary>
            Captures a Surface Cone object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCone.Length">
            <summary>
            Gets and Sets the length of the cone
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCone.TopRadius">
            <summary>
            Gets and Sets the top radius of the cone
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCone.BaseRadius">
            <summary>
            Gets and Sets the base radius of the cone
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCylinder">
            <summary>
            Captures a Surface Cylinder object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCylinder.Radius">
            <summary>
            Gets and Sets the radius of the cylinder
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCylinder.Length">
            <summary>
            Gets and Sets the length of the cylinder
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCylinder.Volume">
            <summary>
            Gets the volume of the cylinder, which is the area of the circular face,
            multiplied by its length, not 0 as returned by PowerSHAPE.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceExtrusion">
            <summary>
            Captures a Surface Extrusion object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceExtrusion.Length">
            <summary>
            Gets and Sets the length of the extrusion
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceExtrusion.NegativeLength">
            <summary>
            Gets and Sets the negative length of the extrusion
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceExtrusion.DraftAngle">
            <summary>
            Gets and Sets the draft angle of the extrusion
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane">
            <summary>
            Captures a Surface Plane object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.Length">
            <summary>
            Gets and Sets the length of the Plane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.Width">
            <summary>
            Gets and Sets the width of the Plane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.Volume">
            <summary>
            Gets the volume of the Plane, which is 0
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor gets a plane already created in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            This constructor gets a plane already created in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Planes)">
            <summary>
            This constructor creates a plane at a specified origin
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfacePlane.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Planes,Autodesk.Geometry.MM,Autodesk.Geometry.MM)">
            <summary>
            This constructor creates a plane at a specified origin and sets is length and width properties
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceRevolution">
            <summary>
            Captures a Surface Revolution object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceRevolution.Angle">
            <summary>
            Gets and Sets the angle of the revolution
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSphere">
            <summary>
            Captures a Surface Sphere object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSphere.Radius">
            <summary>
            Gets and sets the radius of the sphere in MM
            </summary>
            <value>The new radius of the sphere</value>
            <returns>The radius of the sphere</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSpring">
            <summary>
            Captures a Surface Spring object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSpring.TopRadius">
            <summary>
            Gets and Sets the top radius of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSpring.BaseRadius">
            <summary>
            Gets and Sets the base radius of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSpring.Height">
            <summary>
            Gets and Sets the height of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSpring.Pitch">
            <summary>
            Gets and Sets the pitch of the spring
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceSpring.Turns">
            <summary>
            Gets and Sets the turns of the spring
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceTorus">
            <summary>
            Captures a Surface Torus object in PowerSHAPE
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSPrimitive">
            <summary>
            Base class for PowerSHAPE primitives
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPrimitive.Origin">
            <summary>
            Gets the origin of the primitive
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPrimitive.XAxis">
            <summary>
            Gets the X axis of the primitive
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPrimitive.YAxis">
            <summary>
            Gets the Y axis of the primitive
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSPrimitive.ZAxis">
            <summary>
            Gets the Z axis of the primitive
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve">
            <summary>
            Captures a CompCurve object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the CompCurve
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.NumberPoints">
            <summary>
            Gets the number of points in the CompCurve
            </summary>
            <remarks>Overriden because the syntax is different</remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.StartPoint">
            '
            <summary>
            ' Gets the points on the CompCurve
            '
            </summary>
            <summary>
            Gets the start point of a CompCurve
            </summary>
            <remarks>Overriden because the syntax is different</remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.EndPoint">
            <summary>
            Gets the start point of a CompCurve
            </summary>
            <remarks>Overriden because the syntax is different</remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.NumberCurveItems">
            <summary>
            Gets the number of items that make up the CompCurve
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.Delete">
            <summary>
            Deletes the CompCurve from PowerSHAPE and removes it from the CompCurves collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors curve in a specified plane
            </summary>
            <param name="mirrorPlane">Plane about which to mirror the curve</param>
            <param name="mirrorPoint">Origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves curve by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">First of the two absolute positions</param>
            <param name="pointToMoveTo">Second of the two absolute positions</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves curve by a specified relative amount
            </summary>
            <param name="moveVector">Relative amount by which the curve will be moved</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates curve by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">Axis around which the curve is are to be rotated</param>
            <param name="rotationAngle">Angle by which the curve is to be rotated</param>
            <param name="copiesToCreate">Number of copies to create of the original curve</param>
            <param name="rotationOrigin">Origin of the rotation axis</param>
            <returns>List of curves created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.Offset(Autodesk.Geometry.MM,System.Int32)">
            <summary>
            Offsets curve by a specified distance
            </summary>
            <param name="offsetDistance">Distance by which to offset the curve</param>
            <param name="copiesToCreate">Number of copies to be created from the operation</param>
            <returns>List of offset curves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.ScaleUniform(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales curve by a single value. Axis can be locked to prevent scaling on that axis
            </summary>
            <param name="scaleFactor">Factor to scale by</param>
            <param name="lockX">Optionally locks X axis to prevent scaling</param>
            <param name="lockY">Optionally locks Y axis to prevent scaling</param>
            <param name="lockZ">Optionally locks Z axis to prevent scaling</param>
            <param name="scaleOrigin">Origin to scale round</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.ScaleNonUniform(System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales curve by individual values for X, Y, and Z. Axis can be locked to prevent scaling on that axis
            </summary>
            <param name="scaleFactorX">Factor to scale by along X</param>
            <param name="scaleFactorY">Factor to scale by along Y</param>
            <param name="scaleFactorZ">Factor to scale by along Z</param>
            <param name="lockX">Optionally locks X axis to prevent scaling</param>
            <param name="lockY">Optionally locks Y axis to prevent scaling</param>
            <param name="lockZ">Optionally locks Z axis to prevent scaling</param>
            <param name="scaleOrigin">Origin to scale round</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCompCurve.ScaleProjectedVolume(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales curve by projected volume. Axis can be locked to prevent scaling on that axis
            </summary>
            <param name="newVolume">New projectd volume</param>
            <param name="lockX">Optionally locks X axis to prevent scaling</param>
            <param name="lockY">Optionally locks Y axis to prevent scaling</param>
            <param name="lockZ">Optionally locks Z axis to prevent scaling</param>
            <param name="scaleOrigin">Origin to scale round</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSCurve">
            <summary>
            Captures a Curve object in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Curve
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.CurveTypes,Autodesk.Geometry.Point[])">
            <summary>
            Creates a new curve through the specified points
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSCompCurve)">
            <summary>
            Creates a new Curve from a CompCurve
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCurve.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCurve.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSCurve.Type">
            <summary>
            Gets the type of a Curve
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.Delete">
            <summary>
            Deletes the Curve from PowerSHAPE and removes it from the Curves collection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single curve in a specified plane
            </summary>
            <param name="mirrorPlane">Plane about which to mirror the curve</param>
            <param name="mirrorPoint">Origin of the mirror plane</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single curve by the relative distance between two absolute positions
            </summary>
            <param name="moveOriginCoordinates">First of the two absolute positions</param>
            <param name="pointToMoveTo">Second of the two absolute positions</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a single curve by a specified relative amount
            </summary>
            <param name="moveVector">Relative amount by which the curve will be moved</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single curve by a specified angle around a specified axis
            </summary>
            <param name="rotationAxis">Axis around which the curve is are to be rotated</param>
            <param name="rotationAngle">Angle by which the curve is to be rotated</param>
            <param name="copiesToCreate">Number of copies to create of the original curve</param>
            <param name="rotationOrigin">Origin of the rotation axis</param>
            <returns>List of curves created by the operation.  If numberOfCopies is 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.Offset(Autodesk.Geometry.MM,System.Int32)">
            <summary>
            Offsets a single curve by a specified distance
            </summary>
            <param name="offsetDistance">Distance by which to offset the curve</param>
            <param name="copiesToCreate">Number of copies to be created from the operation</param>
            <returns>List of offset curves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.ScaleUniform(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales curve by a single value. Axis can be locked to prevent scaling on that axis
            </summary>
            <param name="scaleFactor">Factor to scale by</param>
            <param name="lockX">Optionally locks X axis to prevent scaling</param>
            <param name="lockY">Optionally locks Y axis to prevent scaling</param>
            <param name="lockZ">Optionally locks Z axis to prevent scaling</param>
            <param name="scaleOrigin">Origin to scale round</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.ScaleNonUniform(System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Resizes selected objects in a non-uniform manner, allowing you to choose the scaling to be applied for each axis.
            </summary>
            <param name="scaleFactorX">Factor to scale by along X</param>
            <param name="scaleFactorY">Factor to scale by along Y</param>
            <param name="scaleFactorZ">Factor to scale by along Z</param>
            <param name="lockX">Optionally locks X axis to prevent scaling</param>
            <param name="lockY">Optionally locks Y axis to prevent scaling</param>
            <param name="lockZ">Optionally locks Z axis to prevent scaling</param>
            <param name="scaleOrigin">Origin to scale round</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSCurve.ScaleProjectedVolume(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales curve by projected volume. Axis can be locked to prevent scaling on that axis.
            </summary>
            <param name="newVolume">New projected volume</param>
            <param name="lockX">Optionally locks X axis to prevent scaling</param>
            <param name="lockY">Optionally locks Y axis to prevent scaling</param>
            <param name="lockZ">Optionally locks Z axis to prevent scaling</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve">
            <summary>
            Base class for curves in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Connects to PowerSHAPE.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Connects to PowerSHAPE and a specific entity using its name
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="id">The ID of the new curve.</param>
            <param name="name">The name of the new curve.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.IsClosed">
            <summary>
            Gets and sets whether the curve is closed or not.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.Area">
            <summary>
            Gets the area of the curve.  If it's closed, the area is the enclosed space.  If it's open, the area
            is the enclosed space were it to be closed with a straight line.  If the wireframe is not on a plane,
            the area is calculated supposing that it has been projected onto the principal plane.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.BoundingBox">
            <summary>
            Gets the bounding box of the GenericCurve in PowerSHAPE.
            </summary>
            <returns>A BoundingBox object representing the bounding box in PowerSHAPE.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.FreeMagnitudesAndDirections">
            <summary>
            Frees the magnitudes and directions of the entire wireframe.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.FreeMagnitudesDirections(System.Int32[])">
            <summary>
            Frees the magnitudes and directions of the selected points on the wireframe.
            </summary>
            <param name="wireframePoints">The points to edit the tangents and magnitudes. Index for the points is zero based.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.Reverse">
            <summary>
            Reverses the curve.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.RenumberCurvePoints(System.Int32)">
            <summary>
            Renumbers the points from the specified start point.
            </summary>
            <param name="intStartPoint">The new start point for the curve. Index for the points is zero based.</param>
            <exception cref="T:System.Exception">Only closed curves can be renumbered.</exception>
            <remarks>Curves may be renumbered. One reason for this may be to open a surface at a different location.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.SelectCurvePoints(System.Int32[])">
            <summary>
            Selects the specified points.
            </summary>
            <param name="pointsIndeces">The point indexes in PowerShape. Index for the points is zero based.</param>
            <exception cref="T:System.Exception">Point is not defined.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.DeleteCurvePoints(System.Int32[])">
            <summary>
            Deletes the specified points.
            </summary>
            <param name="pointsIndeces">The point indexes in PowerShape. Index for the points is zero based.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.RepointCurveBetweenPoints(System.Int32,System.Int32,System.Int32,Autodesk.ProductInterface.PowerSHAPE.CornerBehaviours)">
            <summary>
            Repoints the curve between the specified points creating the specified number of points.
            </summary>
            <param name="startPoint">The index of the start point. Index for the points is zero based.</param>
            <param name="endPoint">The index of the end point. Index for the points is zero based.</param>
            <param name="numberOfPoints">The number of new points that are added to the curve and evenly distributed between the start and end points.</param>
            <param name="cornerBehaviour">You can select points which you don't want to remove. These points are marked as corners.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.Extend(Autodesk.ProductInterface.PowerSHAPE.ExtensionEnd,System.Single,Autodesk.ProductInterface.PowerSHAPE.ExtensionType)">
            <summary>
            Extends one end of the curve.
            </summary>
            <param name="curveEnd">The curve end to be extended.</param>
            <param name="length">The length to extend by.</param>
            <param name="straightCurved">The extension type.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.Scale(System.Double,System.Double,System.Double,Autodesk.Geometry.Point)">
            <summary>
            Scales a curve within PowerSHAPE.
            </summary>
            <param name="offsetX">Scale value in X.</param>
            <param name="offsetY">Scale value in Y.</param>
            <param name="offsetZ">Scale value in Z.</param>
            <param name="scaleOrigin">Scale origin, workplane origin if none specified.</param>
            <exception cref="T:System.ApplicationException">Scaling operation not completed correctly.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.MergeAndSpline">
            <summary>
            Merges and splines the curve.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetLengthBetweenTwoPoints(System.Double,System.Double)">
            <summary>
            Gets the length of curve between two key points.
            </summary>
            <param name="pointA">A single representing the chosen start keypoint on the curve. Index starts from zero.</param>
            <param name="pointB">A single representing the chosen end keypoint on the curve. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.ProjectOntoPlane(Autodesk.Planes,Autodesk.Geometry.MM)">
            <summary>
            Projects the curve onto the specified plane at the specified position on the plane.
            </summary>
            <param name="plane">The plane onto which to project the curve.</param>
            <param name="positionOnPlane">The position on the plane at which to project the curve.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.ToSpline">
            <summary>
            Creates a single spline from a generic curve.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.ToPolyline">
            <summary>
            Creates a single polyline from a generic curve.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.EditPositionOfPointRelative(System.Int32,Autodesk.Geometry.Vector)">
            <summary>
            Moves a selected Point on a curve by a direction vector.
            </summary>
            <param name="pointNumber">Starts from zero.</param>
            <param name="direction">Vector.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.EditPositionOfPointAbsolute(System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Moves a curve point to a new point position.
            </summary>
            <param name="pointNumber">The index of the point to move. Index starts from zero.</param>
            <param name="newPoint">The new position.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single curve in a specified plane.
            </summary>
            <param name="mirrorPlane">The plane about which to mirror the curve.</param>
            <param name="mirrorPoint">The origin of the mirror plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single curve by the relative distance between two absolute positions.
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions.</param>
            <param name="pointToMoveTo">The second of the two absolute positions.</param>
            <param name="copiesToCreate">The number of co.pies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a single curve by a specified relative amount.
            </summary>
            <param name="moveVector">The relative amount by which the curve will be moved.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single curve by a specified .angle around a specified axis.
            </summary>
            <param name="rotationAxis">The axis around which the curve is are to be rotated.</param>
            <param name="rotationAngle">The angle by which the curve is to be rotated.</param>
            <param name="copiesToCreate">The number of copies to create of the original curve.</param>
            <param name="rotationOrigin">The origin of the rotation axis.</param>
            <returns>A list of curves created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a curve by a specified list of entities.
            </summary>
            <param name="limitingEntity">The entity with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a curve by a specified list of entities.
            </summary>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">The limiting keep option to apply.</param>
            <returns>Limited entity.</returns>
            <remarks>To be used with PSEntityLimiter.NextSolution.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.InsertPointAtPositionBetweenPoints(System.Double)">
            <summary>
            Inserts a new point.
            </summary>
            <param name="position">Position for new point. Index starts at zero.</param>
            <exception cref="T:System.Exception">Position out of range, or failed to insert point.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.InsertPointByProximity(Autodesk.Geometry.Point)">
            <summary>
            Inserts a new point by proximal point.
            </summary>
            <param name="proximalPoint">Proximal position for point.</param>
            <exception cref="T:System.Exception">Failed to insert point.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.InsertPointRelativeToPointOnCurve(System.Int32,System.Double)">
            <summary>
            Inserts a new relative point.
            </summary>
            <param name="referencePointIndex">Reference point. Index starting from zero</param>
            <param name="distance">Distance from reference point.</param>
            <exception cref="T:System.Exception">Failed to insert point.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.InsertPointsAtPlaneIntersections(Autodesk.Planes,System.Double)">
            <summary>
            Inserts a new point at an offset from the plane intersection.
            </summary>
            <param name="plane">Plane intersecting curve.</param>
            <param name="offset">Value to offset.</param>
            <exception cref="T:System.Exception">Failed to insert points.</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetEntryTangentOfPoint(System.Int32)">
            <summary>
            Entry tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which entry tangency is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetExitTangentOfPoint(System.Int32)">
            <summary>
            Gets the exit tangent of the desired point.
            </summary>
            .
            <param name="pointNumber">Point at which exit tangency is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetEntryMagnitudeOfPoint(System.Int32)">
            <summary>
            Gets the magnitude of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which entry tangency magnitude is require. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetExitMagnitudeOfPoint(System.Int32)">
            <summary>
            Gets the magnitude of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which exit tangency magnitude is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetEntryAzimuthAngleOfPoint(System.Int32)">
            <summary>
            Gets the azimuth angle of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which the entry tangency azimuth angle is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetEntryElevationAngleOfPoint(System.Int32)">
            <summary>
            Gets the elevation angle of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which the exit tangency elevation angle is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetExitAzimuthAngleOfPoint(System.Int32)">
            <summary>
            Gets the azimuth angle of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which the exit tangency azimuth angle is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.GetExitElevationAngleOfPoint(System.Int32)">
            <summary>
            Gets the elevation angle of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">Point at which the exit tangency elevation angle is required. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.EditCurvePointTangency(System.Int32,Autodesk.Geometry.Vector,Autodesk.Geometry.Vector)">
            <summary>
            Edits the entry and exit tangencies at a defined point.
            </summary>
            <param name="pointNumber">Point at which to carry out the operation. Index starts from zero.</param>
            <param name="entryTangent">Desired entry tangent. If this is not to be changed, pass in the current entry tangent.</param>
            <param name="exitTangent">Desired exit tangent. If this is not to be changed, pass in the current exit tangent.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.EditCurvePointTangencyMagnitude(System.Int32,System.Double,System.Double)">
            <summary>
            Edits the entry and exit tangency magnitudes at a defined point.
            </summary>
            <param name="pointNumber">Point at which to carry out the operation. Index starts from zero.</param>
            <param name="entryMagnitude">Desired entry tangent. If this is not to be changed, pass in the current entry tangent.</param>
            <param name="exitMagnitude">Desired exit tangent. If this is not to be changed, pass in the current exit tangent.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve.DeleteDependencies">
            <summary>
            Deletes any dependencies.
            Useful when trying to duplicate a curve which is dependent on a mesh.
            It must be added to the selection for this to work!
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLine">
            <summary>
            Captures a Line object in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Initialises the Line.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="id">The ID for the new line.</param>
            <param name="name">The name for the new line.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Creates a new line in PowerSHAPE between the start and end points.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="startPoint">The start point of the new line.</param>
            <param name="endPoint">The end point of the new line.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.RenameCommand">
            <summary>
            Defines the command that'll be used to rename the Line.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.NumberPoints">
            <summary>
            Overrides the NumberPoints property, as a line will always have 2 points.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.Points">
            <summary>
            Gets the points on the Wireframe.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.BoundingBox">
            <summary>
            Gets the bounding box of the line in PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.Length">
            <summary>
            Gets and sets the length of the line.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.AngleXYApparent">
            <summary>
            Sets the XY Angle Apparent.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.AngleXYElevation">
            <summary>
            Sets the XY Angle Elevation.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.AngleYZApparent">
            <summary>
            Sets the YZ Angle Apparent.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.AngleYZElevation">
            <summary>
            Sets the YZ Angle Elevation.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.AngleZXApparent">
            <summary>
            Sets the ZX Angle Apparent.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLine.AngleZXElevation">
            <summary>
            Sets the ZX Angle Elevation.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.Delete">
            <summary>
            Deletes the Line from PowerSHAPE and removes it from the Lines collection.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.Reverse">
            <summary>
            Reverses the direction of the line.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.Extend(Autodesk.ProductInterface.PowerSHAPE.ExtensionEnd,System.Single,Autodesk.ProductInterface.PowerSHAPE.ExtensionType)">
            <summary>
            Extends one end of the line.
            </summary>
            <param name="lineEnd">To specify the end of the curve to be extended.</param>
            <param name="length">The extension length.</param>
            <param name="straightCurved">The straight curved.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.GetLengthBetweenPoints(System.Single,System.Single)">
            <summary>
            As a line is always straight, the length between two points can be calculated geometrically.
            </summary>
            <param name="pointA">Point A.</param>
            <param name="pointB">Point B.</param>
            <exception cref="T:System.NotImplementedException">This feature should be calculated geometrically, and as such is not available in PSline</exception>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single line by the relative distance between two absolute positions.
            </summary>
            <param name="moveOriginCoordinates">First of the two absolute positions.</param>
            <param name="pointToMoveTo">Second of the two absolute positions.</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a single line by a specified relative amount.
            </summary>
            <param name="moveVector">Relative amount by which the line will be moved.</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single line by a specified angle around a specified axis.
            </summary>
            <param name="rotationAxis">Axis around which the line is are to be rotated.</param>
            <param name="rotationAngle">Angle by which the line is to be rotated.</param>
            <param name="copiesToCreate">Number of copies to create of the original line.</param>
            <param name="rotationOrigin">Origin of the rotation axis.</param>
            <returns>List of lines created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single line in a specified plane.
            </summary>
            <param name="mirrorPlane">Plane about which to mirror the line.</param>
            <param name="mirrorPoint">Origin of the mirror plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.Cut(Autodesk.Geometry.Point)">
            <summary>
            Cuts a single line to produce two lines.
            </summary>
            <param name="pointAtWhichToCut">Point at which to cut the line. This point must lie on the line.</param>
            <exception cref="T:System.ApplicationException">Point does not lie on the line.</exception>
            <returns>A new line</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a line by a specified entity.
            </summary>
            <param name="limitingEntity">The entity with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>The entities produced by the limiting operation.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a line by a specified list of entities.
            </summary>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">If true, turns edit selection off.</param>
            <returns>The entities produced by the limiting operation.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLine.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">Keep option, by default KeepOne.</param>
            <returns>The limited entity.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSpCurve">
            <summary>
            Captures a Curve object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Exists">
            <summary>
            This operation checks to see if the pCurve exists in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Name">
            <summary>
            As all PCurve evaluation operations in PowerSHAPE need to use the name, this cannot
            be derived from the id
            </summary>
            <exception cref="T:System.ApplicationException">Cannot set the name of a pCurve</exception>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.BoundingBox">
            <summary>
            Gets the bounding box of the internal polyline
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Level">
            <summary>
            Gets and Sets the level of the parent surface
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.LevelNumber">
            <summary>
            Gets and Sets the level number of the parent surface
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.PolyLine">
            <summary>
            Because many properties of the pCurve are not availble through the PowerSHAPE macro code,
            a spline curve is used to emulate the pCurve behind the scenes
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Surface">
            <summary>
            Returns the parent surface of the pCurve
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.NumberPoints">
            <summary>
            Gets the number of points on the pCurve - overriden because the pCurve cannot be
            interrogated using its id
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Points">
            <summary>
            Gets the points on the pCurve - overriden because the pCurve cannot be
            interrogated in PowerSHAPE using its id
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.StartPoint">
            <summary>
            Gets the start point of the pCurve, overriden from Wireframe because can't interrogate
            a pCurve using its id
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.EndPoint">
            <summary>
            Gets the end point of the pCurve, overriden from Wireframe because can't interrogate
            a pCurve using its id
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Length">
            <summary>
            Returns the length of the backend polyline
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.CentreOfGravity">
            <summary>
            Gets the volumetric centre of the backend polyline's bounding box
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.IsClosed">
            <summary>
            Gets and sets whether the pCurve is closed or not
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.IsOnEdge">
            <summary>
            Gets whether the pCurve is on the edge of its parent surface
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.IsInBoundary">
            <summary>
            Gets whether the pCurve is used in a boundary of its parent surface
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSSurface,System.String)">
            <summary>
            This constructor connects to PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSpCurve.Delete">
            <summary>
            Deletes the pCurve from its surface
            </summary>
            <exception cref="T:System.NotImplementedException">Cannot currently delete a pCurve through the Automation Interface</exception>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSpine">
            <summary>
            Captures a Spine object in PowerSHAPE.
            The spine is a reference curve that may be used to define the overall shape of a surface.
            It was widely used in DUCT, but PowerSHAPE users need not normally be concerned with it.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSSpine._surface">
            <summary>
            The parent surface of a spine.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSpine.Level">
            <summary>
            Gets/Sets the level of the surface curve by getting/setting the level
            of its parent surface
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSpine.CentreOfGravity">
            <summary>
            Indicates that the user cannot currently obtain the spine centre of gravity in
            PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSpine.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Connects to PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSpine.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Connects to PowerSHAPE and a specific entity using its name
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSpine.Delete">
            <summary>
            Not implemented.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented.</exception>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSpine.GetPointTangent(System.Int32)">
            <summary>
            Gets the tangent through the desired point
            </summary>
            <param name="pointNumber">The point at which tangency is required</param>
            <returns>Tangent vector</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSpine.GetPointAzimuthAngle(System.Int32)">
            <summary>
            Gets the azimuth angle of the tangent of the desired point
            </summary>
            <param name="pointNumber">The point at which the tangency azimuth angle is required</param>
            <returns>Azimuth vector</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSpine.GetPointElevationAngle(System.Int32)">
            <summary>
            Gets the elevation angle of the tangent of the desired point
            </summary>
            <param name="pointNumber">The point at which the tangency elevation angle is required</param>
            <returns>Elevation vector</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve">
            <summary>
            Base class for Surface Curves.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve._surface">
            <summary>
            The parent surface of the Surface Curve.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve._internalId">
            <summary>
            The internal ID of the Surface Curve.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Exists">
            <summary>
            Overrides Exists() from DatabaseEntity as a surface curve must be analysed using its
            name. If the surface curve has been deleted, its name will now be 0 and always return False
            </summary>
            <returns>Boolean indicating whether this surface curve is on the specified surface.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.InternalId">
            <summary>
            Gets/Sets the unique internal ID of the surface curve.
            </summary>
            <remarks>
            Because PowerSHAPE recalculates the ID of the surface curve every time,
            a unique identifier is needed within this system to determine whether the curve still exists etc.
            </remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Level">
            <summary>
            Gets/Sets the level of the surface curve by getting/setting the level
            of its parent surface.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Name">
            <summary>
            Gets/Sets the name of the lateral or longitudinal.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.BoundingBox">
            <summary>
            BoundingBox property is not valid for this type
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Length">
            <summary>
            Gets the length of the surface curve - overriden because the curve cannot be
            interrogated using its id.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.NumberPoints">
            <summary>
            Gets the number of points on the surface curve - overriden because the curve cannot be
            interrogated using its id.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.CentreOfGravity">
            <summary>
            Gets the centre of gravity of the surface curve - overriden because the curve cannot be
            interrogated using its id.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Points">
            <summary>
            Gets the points on the surface curve.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.StartPoint">
            <summary>
            Gets the start point of the surface curve - overriden because the curve cannot be
            interrogated using its id.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.EndPoint">
            <summary>
            Gets the end point of the surface curve - overriden because the curve cannot be
            interrogated using its id.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.ShortType">
            <summary>
            Gets the short name of the surface curve for use in macros.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Transparency">
            <summary>
            Always returns 0, as a surface curve can only ever be opaque.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.ParentSurface">
            <summary>
            Gets the parent surface of the surface curve.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Connects to PowerShape.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="surface">The parent surface.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Equals(System.Object)">
            <summary>
            Overrides Equals() from DatabaseEntity as the surface curve's name/ID can be changed since
            the surface curve was initialised. Therefore its unique internal ID is used for comparison.
            </summary>
            <param name="obj">The other PSSurfaceCurve to compare to.</param>
            <returns>Returns a boolean indicating whether the two objects are equal.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Delete">
            <summary>
            Deletes the surface curve from the surface. It is always overriden by the Lateral and Longitudinal classes
            as the other surface curve IDs will have to be updated afterward.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.AddToSelection(System.Boolean)">
            <summary>
            Calls the parent surface's AddSurfaceCurveToSelection operation.
            </summary>
            <param name="emptySelectionFirst">Determines whether previous surface curve additions are to be disregarded.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetLengthBetweenTwoPoints(System.Single,System.Single)">
            <summary>
            Gets the length of curve between two key points.
            </summary>
            <param name="pointA">Single representing the chosen start keypoint on the curve. Index starts from zero.</param>
            <param name="pointB">Single representing the chosen end keypoint on the curve. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Offset(System.Single,Autodesk.ProductInterface.PowerSHAPE.OffsetSplitAtDiscontinuity,System.Boolean)">
            <summary>
            Offsets the surface curve by the specified amount.
            </summary>
            <param name="distanceToOffset">Distance to offset the curve.</param>
            <param name="discontinuityBehaviour">Determines whether the curve should be split at discontinuities.</param>
            <param name="applyCurveSmoothing">If true, activates the 'SMOOTH ON' option in PowerShape. If false, activates 'SMOOTH OFF'.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.MoveSurfacePointsAlongVector(Autodesk.Geometry.Vector,System.Int32[])">
            <summary>
            Moves the indicated surface points by a vector.
            </summary>
            <param name="moveVector">Vector along which to move the points.</param>
            <param name="pointNumbersToMove">Points to move. Index starts from zero.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.CreateCompositeCurve">
            <summary>
            Returns a composite curve of the surface curve.
            </summary>
            <returns>A new composite curve.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.SelectCurvePoints(System.Int32[])">
            <summary>
            Selects the indicated points on the surface curve.
            </summary>
            <param name="pointsToSelect">Point numbers to be selected. Index for the points is zero based.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.OffsetPointsOnCurve(System.Single,Autodesk.ProductInterface.PowerSHAPE.OffsetSplitAtDiscontinuity,System.Boolean,System.Int32[])">
            <summary>
            Offsets the indicated points on the surface curve.
            </summary>
            <param name="distanceToOffset">Distance to offset points.</param>
            <param name="discontinuityBehaviour">OffsetSplitAtDiscontinuity object for handling SPLITON/OFF.</param>
            <param name="applyCurveSmoothing">Boolean to apply curve smoothing.</param>
            <param name="pointNumbersToOffset">Array of points to offset. Index starts from zero.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryTangentOfPoint(System.Int32)">
            <summary>
            Gets the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which entry tangency is required. Index starts from zero.</param>
            <returns>Entry tangent vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitTangentOfPoint(System.Int32)">
            <summary>
            Gets the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which exit tangency is required. Index starts from zero.</param>
            <returns>Exit tangent vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryMagnitudeOfPoint(System.Int32)">
            <summary>
            Gets the magnitude of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which entry tangency magnitude is required. Index starts from zero.</param>
            <returns>Entry tangent magnitude vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitMagnitudeOfPoint(System.Int32)">
            <summary>
            Gets the magnitude of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which exit tangency magnitude is required. Index starts from zero.</param>
            <returns>Exit tangent magnitude vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryAzimuthAngleOfPoint(System.Int32)">
            <summary>
            Gets the azimuth angle of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the entry tangency azimuth angle is required. Index starts from zero.</param>
            <returns>Entry azimuth vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryElevationAngleOfPoint(System.Int32)">
            <summary>
            Gets the elevation angle of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the exit tangency elevation angle is required. Index starts from zero.</param>
            <returns>Entry elevation vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitAzimuthAngleOfPOint(System.Int32)">
            <summary>
            Gets the azimuth angle of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the exit tangency azimuth angle is required. Index starts from zero.</param>
            <returns>Exit azimuth vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitElevationAngleOfPoint(System.Int32)">
            <summary>
            Gets the elevation angle of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the exit tangency elevation angle is required. Index starts from zero.</param>
            <returns>Exit elevation vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryNormalOfPoint(System.Int32)">
            <summary>
            Gets the entry normal of the desired point.
            </summary>
            <param name="pointNumber">The point at which entry normal is required. Index starts from zero.</param>
            <returns>Entry normal vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitNormalOfPoint(System.Int32)">
            <summary>
            Gets the exit normal of the desired point.
            </summary>
            <param name="pointNumber">The point at which exit normal is required. Index starts from zero.</param>
            <returns>Exit normal vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryFlareAngleOfPoint(System.Int32)">
            <summary>
            Gets the flare angle of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the entry tangency flare angle is required. Index starts from zero.</param>
            <returns>Entry flare vector</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetEntryTwistAngleOfPoint(System.Int32)">
            <summary>
            Gets the twist angle of the entry tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the exit tangency twist angle is required. Index starts from zero.</param>
            <returns>Entry twist vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitFlareAngleOfPoint(System.Int32)">
            <summary>
            Gets the flare angle of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the exit tangency flare angle is required. Index starts from zero.</param>
            <returns>Exit flare vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.GetExitTwistAngleOfPoint(System.Int32)">
            <summary>
            Gets the twist angle of the exit tangent of the desired point.
            </summary>
            <param name="pointNumber">The point at which the exit tangency twist angle is required. Index starts from zero.</param>
            <returns>Exit twist vector.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.EditAfterTangencyOfPoint(System.Int32,Autodesk.Geometry.Vector)">
            <summary>
            Edits the after tangent at the selected point.
            </summary>
            <param name="pointNumber">The number of the point to select. Index starts from zero.</param>
            <param name="afterTangentVector">The control point for the after tangent.</param>
            <remarks>The tangents at the selected points is set along the curve.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.EditBeforeTangencyOfPoint(System.Int32,Autodesk.Geometry.Vector)">
            <summary>
            Edits the before tangent at the selected point.
            </summary>
            <param name="pointNumber">The number of the point to select. Index starts from zero.</param>
            <param name="beforeTangentVector">The control point for the before tangent.</param>
            <remarks>The tangents at the selected points is set along the curve.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.EditTangencyOfPoint(System.Int32,Autodesk.Geometry.Vector,Autodesk.Geometry.Vector)">
            <summary>
            Edits the entry and exit tangencies at a defined point.
            </summary>
            <param name="pointNumber">The point at which to carry out the operation. Index starts from zero.</param>
            <param name="entryTangent">The desired entry tangent. If this is not to be changed, pass in the current entry tangent.</param>
            <param name="exitTangent">The desired exit tangent. If this is not to be changed, pass in the current exit tangent.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Move(Autodesk.Geometry.Point,Autodesk.Geometry.Point)">
            <summary>
            Moves a single surfacecurve by the relative distance between two absolute positions.
            </summary>
            <param name="moveOriginCoordinates">The first of the two absolute positions.</param>
            <param name="pointToMoveTo">The second of the two absolute positions.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Move(Autodesk.Geometry.Vector)">
            <summary>
            Moves a single surfacecurve by a specified relative amount.
            </summary>
            <param name="moveVector">The relative amount by which the surfacecurve will be moved.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSSurfaceCurve.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single surface curve by a specified angle around a specified axis.
            </summary>
            <param name="rotationAxis">The axis around which the surface curve is are to be rotated.</param>
            <param name="rotationAngle">The angle by which the surface curve is to be rotated.</param>
            <param name="rotationOrigin">The origin of the rotation axis.</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLateral">
            <summary>
            Captures a Surface Lateral object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLateral.Identifier">
            <summary>
            Gets identifier of the Lateral
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLateral.ShortType">
            <summary>
            Gets short type of the Lateral
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLateral.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Connects to PowerSHAPE and a specific entity using its name
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLateral.Delete">
            <summary>
            Deletes the Surface Lateral from PowerSHAPE
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinal">
            <summary>
            Captures a Surface Longitudinal object in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinal.Identifier">
            <summary>
            Gets identifier of the Longitudinal
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinal.ShortType">
            <summary>
            Gets short type of the Longitudinal
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinal.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String,Autodesk.ProductInterface.PowerSHAPE.PSSurface)">
            <summary>
            Connects to PowerSHAPE and a specific entity using its name
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLongitudinal.Delete">
            <summary>
            Deletes the Surface Longitudinal from PowerSHAPE
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntity">
            <summary>
            Abstract class to capture an entity in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Connects to PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Connects to PowerSHAPE and a specific entity using its name
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.RenameCommand">
            <summary>
            Command used to rename the entity.  It can vary between entity types
            </summary>
            <returns>Command used to rename the entity</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Name">
            <summary>
            Gets the Name of the entity in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Level">
            <summary>
            Gets and Sets the Level the Entity is on in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.LevelNumber">
            <summary>
            Gets and sets the Level Number the Entity is on in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.BoundingBox">
            <summary>
            Gets the bounding box of the Entity in PowerSHAPE
            </summary>
            <returns>A BoundingBox object representing the bounding box in PowerSHAPE</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Transparency">
            <summary>
            Gets and Sets the transparency of the Entity in PowerSHAPE
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.PowerSHAPEType">
            <summary>
            Gets the PowerSHAPE name of the object
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSEntity.CompositeID">
            <summary>
            Gets the composite ID for use in communication with the ActiveDocument object
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Delete">
            <summary>
            Deletes the item from PowerSHAPE and removes it from the correct collection
            if it is a member of one
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.GetHashCode">
            <summary>
            Overrides the GetHashCode function to return the ID as an integer
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.AddToSelection(System.Boolean)">
            <summary>
            Adds the entity to the selection and optionally clears the current selection
            </summary>
            <param name="emptySelectionFirst">Optionally clears the current selection</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.RemoveFromSelection">
            <summary>
            Removes the Entity from the current selection
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Copy">
            <summary>
            Adds the item to the clipboard
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Duplicate">
            <summary>
            Copies and pastes the Entity.
            NB:Any dependencies are also copied and cause an exception to be thrown.
            </summary>
            <exception cref="T:System.NotImplementedException">Doesn't yet support multiple pasted objects</exception>
            <exception cref="T:System.Exception">Item in clipboard is not a PowerSHAPE, or the expected object</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.RebaseToWorkplane(Autodesk.ProductInterface.PowerSHAPE.PSWorkplane,Autodesk.ProductInterface.PowerSHAPE.PSWorkplane)">
            <summary>
            Shifts the entity from being relative to one workplane to being relative to another
            </summary>
            <param name="toWorkplane">The workplane to rebase to</param>
            <param name="fromWorkplane">Optional parameter.  The workplane to rebase from.  Default of Nothing is world.</param>
            <exception cref="T:System.NotImplementedException">Doesn't yet support multiple pasted objects</exception>
            <exception cref="T:System.Exception">Item in clipboard is not a PowerSHAPE, or the expected object</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.Blank">
            <summary>
            Blanks the Entity in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.BlankExcept">
            <summary>
            Blanks everything apart from this Entity in PowerSHAPE
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.DistanceTo(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Gets the distance between this entity and another
            </summary>
            <param name="otherEntity">The function returns the distance between this entity and the otherEntity</param>
            <exception cref="T:System.Exception">Failed to determine distance between objects</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntity.SetLevelNumber(System.Int32)">
            <summary>
            Sets the level number to the specified value - used during cache refreshes
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSCollection`1">
            <summary>
            Base class for all PowerShape Product Interface collections which items are not PSEntities.
            It controls the addition of items to PowerShape collections.
            </summary>
            <typeparam name="T">The type of the item. It can be a PSEntity, a PSLevel, etc.</typeparam>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1">
            <summary>
            Base class for curve collections.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1._powerSHAPE">
            <summary>
            The PowerSHAPE Automation object.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1.GetByName(System.String)">
            <summary>
            Gets the entity with the specified name. If an entity with the specified names does not exist
            then Nothing is returned.
            </summary>
            <param name="name">The name of the entity.</param>
            <returns>It may return Nothing if entity is not found.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity for
            selection operations.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1.Add(`0)">
            <summary>
            Adds a new DatabaseEntity to the List.
            </summary>
            <param name="databaseEntity">The entity to add.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1.AddNoChecks(`0)">
            <summary>
            Adds a new DatabaseEntity to the List.
            </summary>
            <param name="databaseEntity">The entity to add.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntitiesCollection`1.Remove(System.String)">
            <summary>
            Removes the item with the specified name.
            </summary>
            <param name="name">The name of the entity to remove.</param>
            <returns>True if item is successfully removed; otherwise, false.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity">
            <summary>
            Abstract class captures a database entity in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity._powerSHAPE">
            <summary>
            The PowerSHAPE Automation object.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity._id">
            <summary>
            The database ID of the object.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity._name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new base entity.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.PSAutomation">
            <summary>
            Gets the parent PSAutomation.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.Id">
            <summary>
            Gets the Id of the entity in PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify this type of entity.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.Name">
            <summary>
            Gets or Sets the name of the entity.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.Exists">
            <summary>
            Checks to see if the entity exists in PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.PowerSHAPE">
            <summary>
            Gets the current PowerSHAPE instance.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.AbortIfDoesNotExist">
            <summary>
            This operation throws an error if the item does not exist in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSDatabaseEntity.Equals(System.Object)">
            <summary>
            Compares the DatabaseEntity to another DatabaseEntity by checking their IDs.
            </summary>
            <param name="obj">The other DatabaseEntity to compare to.</param>
            <returns>Boolean determining whether the IDs match.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityFactory">
            <summary>
            Creates instance objects based on a string identifying an items type in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityFactory.CreateEntity(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String,System.Int32,System.String)">
            <summary>
            Creates instance objects based on a string identifying an item's type in PowerSHAPE.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="type">The identifier PowerSHAPE uses to identify this type of entity.</param>
            <param name="id">The identifier of the entity.</param>
            <param name="name">The name of the entity.</param>
            <returns>The new entity.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityFactory.CreateEntity(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Creates instance objects based on a string identifying an item's type in PowerSHAPE.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="type">The identifier PowerSHAPE uses to identify this type of entity.</param>
            <param name="id">The identifier of the entity.</param>
            <param name="name">The name of the entity.</param>
            <returns>The new entity.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityFactory.CreateEntity(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32)">
            <summary>
            Creates instance objects based on a string identifying an item's type in PowerSHAPE.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="compositeID">The composite identifier of the entity.</param>
            <returns>The new entity.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLevel">
            <summary>
            Captures a Level in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSLevel._powerSHAPE">
            <summary>
            The PowerSHAPE Automation object.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSLevel._number">
            <summary>
            The number of the level.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevel.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32)">
            <summary>
            Initialises a Level with the specified number identifier.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="number">The level number.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevel.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String)">
            <summary>
            Creates a new Level.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="number">The level number.</param>
            <param name="name">The level name.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLevel.Number">
            <summary>
            Gets the number of the level.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLevel.Name">
            <summary>
            Gets and sets the name of the level.  The format of the string should be of the format: [Group : ]Name.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLevel.IsUsed">
            <summary>
            Gets whether the level is currently in use or not.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSLevel.IsActive">
            <summary>
            Gets and sets whether a level is active or not.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevel.Equals(System.Object)">
            <summary>
            Overrides the equals function to compare Levels. Compares levels by number.
            </summary>
            <param name="obj">The other level to compare to.</param>
            <returns>True if numbers match.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevel.Exists">
            <summary>
            This operation checks to see if a Level exists.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevel.AddContentsToSelection(System.Boolean)">
            <summary>
            Adds all entities on this level to the selection.
            </summary>
            <param name="keepPreviousSelection">If true keeps the previous selection in PowerShape.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevel.Clear">
            <summary>
            Deletes all entities on this level.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection">
            <summary>
            Captures the collection of Levels in a Project.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection._powerSHAPE">
            <summary>
            The PowerSHAPE Automation object.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new collection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection.Item(System.Int32)">
            <summary>
            Gets the level with the specified number.  If the specified level does not exist in the collection, then Nothing is returned.
            </summary>
            <param name="number">The level number.</param>
            <returns>The found level.</returns>
            <remarks>If none is found, it returns Nothing.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection.Item(System.String)">
            <summary>
            Gets the level with the specified name.  If the specified level does not exist in the collection, then Nothing is returned.
            </summary>
            <param name="name">The level name.</param>
            <returns>The found level.</returns>
            <remarks>If none is found, it returns Nothing.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection.ReadLevels">
            <summary>
            Reads all the levels in the model.  This operation takes a while to execute.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection.ActivateAllLevels">
            <summary>
            Activates all Levels.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSLevelsCollection.DeactivateAllLevels">
            <summary>
            Deactivates all Levels.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSMacro">
            <summary>
            Handles Macros in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSMacro._powerSHAPE">
            <summary>
            The instance of PowerSHAPE will run the macro on.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMacro.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.FileSystem.File)">
            <summary>
            Constructor reads the Macro File in.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="macroFile">The file path to the macro.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMacro.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String[])">
            <summary>
            Creates a new macro from a list of strings.
            </summary>
            <param name="psAutomation">The base instance to interact with PowerShape.</param>
            <param name="macros">a list of macros to be loaded.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMacro.TotalCount">
            <summary>
            Gets the number of lines in the macro (includes lines in called macros).
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMacro.RunStep(System.Boolean)">
            <summary>
            Executes the next line in the macro and increments the index marker.
            </summary>
            <param name="hideDialogs">If true, hides any dialogs while running commands.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMacro.Run(System.Boolean,System.Boolean)">
            <summary>
            Executes the macro until the end, optionally feeding back progress as it goes.
            </summary>
            <param name="giveProgress">If true, it will give progress status.</param>
            <param name="hideDialogs">If true, hides any dialogs while running commands.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMacro.RunComplete">
            <summary>
            Executes the macro in one go rather than line by line.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSMaterial">
            <summary>
            Captures a Material in PowerSHAPE.  A Material is used to give colour and texture
            to a surface.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSMaterial._powerSHAPE">
            <summary>
            The PowerSHAPE Automation object.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSMaterial._name">
            <summary>
            The name of the Material.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String)">
            <summary>
            This operation initialises a Material.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="name">The material name.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.String,System.Double,System.Double,System.Double,System.Double,System.Byte,System.Byte,System.Byte)">
            <summary>
            This constructor creates a new material in PowerSHAPE with the specified values.
            </summary>
            <param name="powerSHAPE">The PowerSHAPE Automation object.</param>
            <param name="name">The name of the material.</param>
            <param name="polish">The polish of the material.</param>
            <param name="emission">The emission of the material.</param>
            <param name="transparency">The transparency of the material.</param>
            <param name="reflectance">The reflectance of the material.</param>
            <param name="colourR">The red colour of the material.  Between 0 and 255.</param>
            <param name="colourG">The green colour of the material.  Between 0 and 255.</param>
            <param name="colourB">The blue colour of the material.  Between 0 and 255.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Name">
            <summary>
            Gets the name of the Material.
            </summary>
            <returns>Name of the Material.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Polish">
            <summary>
            Gets and sets the polish value of the material.
            </summary>
            <returns>The polish of the material.</returns>
            <value>The polish of the material.</value>
            .
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Emission">
            <summary>
            Gets and sets the emission of the material.
            </summary>
            <returns>The emission of the material.</returns>
            <value>The emission of the material.</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Transparency">
            <summary>
            Gets and sets the transparency of the material.
            </summary>
            <returns>The transparency of the material.</returns>
            <value>The transparency of the material.</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Reflectance">
            <summary>
            Gets and sets the reflectance of the material.
            </summary>
            <returns>The reflectance of the material.</returns>
            <value>The reflectance of the material.</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.ColourR">
            <summary>
            Gets and sets the red colour of the material...
            </summary>
            <returns>The red colour of the material.</returns>
            <value>The red colour of the material.</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.ColourG">
            <summary>
            Gets and sets the green colour of the material..
            </summary>
            <returns>The green colour of the material..</returns>
            <value>The green colour of the material..</value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.ColourB">
            <summary>
            Gets and sets the blue colour of the material.
            </summary>
            <returns>The blue colour of the material.</returns>
            <value>The blue colour of the material.</value>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Exists">
            <summary>
            This operation checks to see if a material exists.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterial.Delete">
            <summary>
            This operation deletes the Material from PowerSHAPE and removes it from the Materials collection.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection">
            <summary>
            Captures the collection of Materials in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection._powerSHAPE">
            <summary>
            The base instance to interact with PowerShape.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor is required as collection inherits from EntitiesCollection.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection.Item(System.String)">
            <summary>
            Gets the material with the specified name.  If the specified material does not exist
            in the collection, then Nothing is returned.
            </summary>
            <param name="name">The material name.</param>
            <returns>The found material.</returns>
            <remarks>None found, so returns Nothing.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection.Remove(Autodesk.ProductInterface.PowerSHAPE.PSMaterial)">
            <summary>
            Removes a material from the collection and from PowerShape.
            </summary>
            <param name="material">The material to remove.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection.CreateMaterial(System.String,System.Double,System.Double,System.Double,System.Double,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new material in PowerSHAPE with the specified values.
            </summary>
            <param name="name">The name of the material.</param>
            <param name="polish">The polish of the material.</param>
            <param name="emission">The emission of the material.</param>
            <param name="transparency">The transparency of the material.</param>
            <param name="reflectance">The reflectance of the material.</param>
            <param name="colourR">The red colour of the material. Between 0 and 255.</param>
            <param name="colourG">The green colour of the material. Between 0 and 255.</param>
            <param name="colourB">The blue colour of the material.Between 0 and 255.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMaterialsCollection.CreateMaterials(System.Tuple{System.String,System.Double,System.Double,System.Double,System.Double,System.Byte[]}[])">
            <summary>
            Create the defined materials.
            </summary>
            <param name="materialDefinitions">Each definition should be name, polish, emission, transparency, reflectance, byte[R, G, B].</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSModel">
            <summary>
            Captures a Model in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._annotationsCollection">
            <summary>
            .
            The List of Annotations in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._arcsCollection">
            <summary>
            The List of Arcs in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._compCurvesCollection">
            <summary>
            The List of CompCurves in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._curvesCollection">
            <summary>
            The List of Curves in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._electrodesCollection">
            <summary>
            The List of Electrodes in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._linesCollection">
            <summary>
            The List of Lines in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._meshesCollection">
            <summary>
            The List of Meshes in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._pointsCollection">
            <summary>
            The List of Points in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._solidsCollection">
            <summary>
            .
            The List of Solids in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._surfacesCollection">
            <summary>
            The List of Surfaces in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._workplanesCollection">
            <summary>
            The List of Workplanes in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._levelsCollection">
            <summary>
            The List of Levels in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._materialsCollection">
            <summary>
            The List of Materials in the Model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._isListsDirty">
            <summary>
            This flag indicates that the Lists of items are out of date and need to be rebuilt.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._isInSurfaceComparison">
            <summary>
            This flag indicates whether the model is currently in surface comparison mode.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._window">
            <summary>
            This is the window that's holding the model.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSModel._temporaryWorkplane">
            <summary>
            This is the temmporary workplane of the model.  It only exists when explicitly created.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32,System.String,Autodesk.ProductInterface.PowerSHAPE.PSWindow)">
            <summary>
            This operation initialises a Model.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="id">The model id.</param>
            <param name="name">The model name.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor creates a new Empty Model.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,Autodesk.FileSystem.File,System.Boolean)">
            <summary>
            This constructor will create a model from an existing PowerSHAPE model file.
            </summary>
            <param name="powerSHAPE">This is the PowerSHAPE Automation object.</param>
            <param name="file">The file name of the PowerSHAPE model to open.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Identifier">
            <summary>
            Gets the identifer for models within PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Name">
            <summary>
            Gets the name of the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Units">
            <summary>
            Gets whether the model is in metric or imperial based on the length units of the model.
            Sets the model to either BSI (Metric) or ANSI (Imperial)
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Window">
            <summary>
            Gets the window to which this model is attached.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsSelected">
            <summary>
            Gets whether the Model is selected.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Path">
            <summary>
            Gets the path to the Model file.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsCorrupt">
            <summary>
            Gets whether the Model is corrupt.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Annotations">
            <summary>
            Gets the collection of Annotations in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Arcs">
            <summary>
            Gets the collection of Arcs in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.CompCurves">
            <summary>
            Gets the Collection of CompCurves in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Curves">
            <summary>
            Gets the collection of Curves in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Electrodes">
            <summary>
            Gets the collection of Electrodes in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Lines">
            <summary>
            Gets the Collection of Lines in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Meshes">
            <summary>
            Gets the collection of Meshes in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Points">
            <summary>
            Gets the collection of Points in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Solids">
            <summary>
            Gets the collection of Solids in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Surfaces">
            <summary>
            Gets the collection of Surfaces in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Workplanes">
            <summary>
            Gets the collection of Workplanes in the Model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Levels">
            <summary>
            Gets the collection of Levels in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.Materials">
            <summary>
            Gets the collection of Materials in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.SelectedItems">
            <summary>
            Get the selected items in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.BoundingBoxOfSelectedItems">
            <summary>
            Gets the BoundingBox of the selection in PowerSHAPE.  If no items are currently selected then the return value is null
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.CreatedItems">
            <summary>
            Gets the created items in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.UpdatedItems">
            <summary>
            Gets the updated items in the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.ActiveLevels">
            <summary>
            The currently active Levels.
            </summary>
            <returns>The list of the active Levels.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.UsedLevels">
            <summary>
            The currently used Levels.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.NamedLevels">
            <summary>
            The currently named Levels.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsLevelUsedFilterOn">
            <summary>
            Gets and sets the used filter when interrogating Levels.
            </summary>
            <returns>The status of the used filter.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsLevelNamedFilterOn">
            <summary>
            Gets and sets the named filter when interrogating Levels.
            </summary>
            <returns>The status of the named filter.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsLevelActiveFilterOn">
            <summary>
            Gets and sets the active filter when interrogating Levels.
            </summary>
            <returns>The status of the active filter.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.ActiveWorkplane">
            <summary>
            Returns the currently active Workplane or Nothing if World is active.
            </summary>
            <returns>The Active Workplane or Nothing if World is the Active Workplane.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.TemporaryWorkplane">
            <summary>
            The model's temporary workplane
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsInSurfaceComparison">
            <summary>
            This property returns whether the model is in surface comparison mode
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.GeneralTolerance">
            <summary>
            Gets and sets the general tolerance of the model.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSModel.IsReadOnly">
            <summary>
            Gets whether the model is open readonly or not
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Delete">
            <summary>
            Closes this model
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.SetUndoMarker">
            <summary>
            Sets an undo marker in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Undo">
            <summary>
            Performs an undo in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Redo">
            <summary>
            Performs a redo in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.ClearSelectedItems">
            <summary>
            Clears the list of selected items.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.ClearCreatedItems">
            <summary>
            Clears the list of created items.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.ClearUpdatedItems">
            <summary>
            Clears the list of updated items.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.SelectEntities(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.PSEntity},System.Boolean)">
            <summary>
            Selects multiple entities in as few commands as possible.
            </summary>
            <param name="entities">The entities to select.</param>
            <param name="emptySelectionFirst">If True, empties the selection first.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.SelectAll(System.Boolean)">
            <summary>
            Selects everything in the Model that is currently visible.
            </summary>
            <param name="enableDeactivatedLevels">If true, switches filters to be as required.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.DeactivateAllSolids">
            <summary>
            Deactivates the active solid (if there is one), preventing headaches when performing a feature operation.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Refresh">
            <summary>
            Refreshes the information available in the current model.
            Refresh should retain any existing items in the lists, add new ones and remove old ones.
            This function would be used by someone after they have used the "Execute" functionality.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.DeleteEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity})">
            <summary>
            Deletes entities that are in the cache but no longer in PowerShape
            </summary>
            <param name="cachedEntities">Items currently in the cache</param>
            <param name="existingEntities">Items that are in PowerShape</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.StartSurfaceComparison(Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Compares a surface/mesh in PowerSHAPE and displays any selection errors.
            </summary>
            <param name="surfaceToCompare">The surface to compare.</param>
            <param name="meshToCompare">The mesh to compare.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.ExportSurfaceComparisonErrorsFile(Autodesk.FileSystem.File)">
            <summary>
            Outputs a text file containing the Surface Comparison errors.
            </summary>
            <param name="outputFile">The file path were errors will be written.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.StartSurfaceComparison(Autodesk.ProductInterface.PowerSHAPE.PSMesh,Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Compares two meshes in PowerSHAPE and displays any selection errors.
            </summary>
            <param name="meshToCompare">First mesh used in the comparison.</param>
            <param name="meshToCompareTo">Second mesh used in the comparison.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.EndSurfaceComparison">
            <summary>
            Operation exits surface comparison mode.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Save(Autodesk.FileSystem.File)">
            <summary>
            Saves the current model.
            </summary>
            <param name="file">The file path to save the model.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Import(Autodesk.FileSystem.File)">
            <summary>
            This operation imports the desired file.
            </summary>
            <param name="file">The file to be imported.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Export(Autodesk.FileSystem.File,Autodesk.ProductInterface.PowerSHAPE.ExportItemsOptions,Autodesk.ProductInterface.PowerSHAPE.ExportWorkplanes)">
            <summary>
            Exports the selected geometry to create the desired file.
            </summary>
            <param name="exportFile">The file that will be created after exporting the geometry.</param>
            <param name="exportItemsOption">The model items to export.</param>
            <param name="exportWorkplaneOption">The workplane to export.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Unblank">
            <summary>
            Unblanks anything that is currently Blanked.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.BlankToggle">
            <summary>
            This option blanks all visible objects and unblanks all previously blanked objects.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.ResetUI">
            <summary>
            Resets the User Interface, cancelling any open dialogs ready for normal operation.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.ExportScreenshot(Autodesk.FileSystem.File)">
            <summary>
            Exports a screenshot, using PowerSHAPE's Print To File functionality.
            </summary>
            <param name="outputLocation">A jpg file of the screenshot.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.PrintDrawings(System.String,System.String[])">
            <summary>
            Print the specified drawings to the specified printer
            </summary>
            <param name="printerName">Printer name</param>
            <param name="drawings">Drawings to print</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Retriangulate">
            <summary>
            Retriangulate model to its current shading tolerance.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.CreateTemporaryWorkplane(Autodesk.Geometry.Point)">
            <summary>
            Creates a temporary workplane at the specified origin aligned to the current workplane.
            </summary>
            <param name="origin">The origin of the temporary workplane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.DeleteTemporaryWorkplane">
            <summary>
            Deletes the temporary workplane.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.SetCreationLevel(Autodesk.ProductInterface.PowerSHAPE.PSLevel)">
            <summary>
            Sets the creation level for new items
            </summary>
            <param name="creationLevel">The creation level to be used</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.SetCreationLevel(System.Int32)">
            <summary>
            Sets the creation level for new items
            </summary>
            <param name="creationLevel">The creation level to be used</param>
            <exception cref="T:System.Exception">The specified level does not exist</exception>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.GetNearestSurface(Autodesk.Geometry.Point,Autodesk.Geometry.Point@,System.Boolean)">
            <summary>
            Gets the nearest surface to the specified point as well as the nearest point on that surface
            </summary>
            <param name="referencePoint">The point to use for finding the nearest surface</param>
            <param name="nearestPoint">Returns the nearest point on the nearest surface. Or null if the nearest surface cannot be found</param>
            <param name="useWorldCoordinates">Whether or not to return the nearest point on the surface in world coordinates</param>
            <returns>The nearest surface or null if the nearest surface cannot be found</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Initialise">
            <summary>
            Initialises the collections.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.RefreshWorkplanes">
            <summary>
            Refreshes workplanes collection to reflect PowerShape status. It adds a workplane to the collection if exists in PowerShape and it isn't in the active model.
            It deletes the workplane from the collection if it no longer exists in PowerShape.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.RefreshLevels">
            <summary>
            Refreshes levels collection to reflect PowerShape status.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.RefreshMaterials">
            <summary>
            Refreshes materials collection to reflect PowerShape state.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.TryGetEntityFromCache(Autodesk.ProductInterface.PowerSHAPE.PSEntity@,System.Int32,System.String,System.String)">
            <summary>
            Attempts to get the entity from the active model.
            </summary>
            <param name="entity">The returned entity from cache.</param>
            <param name="entityId">The entity id.</param>
            <param name="entityName">The entity name.</param>
            <param name="entityType">The identifier PowerSHAPE uses to identify this type of entity.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.TryGetEntityFromCache(Autodesk.ProductInterface.PowerSHAPE.PSEntity@,System.Int32,System.String,System.Int32,System.String)">
            <summary>
            Attempts to get the entity from the active model.
            </summary>
            <param name="entity">The returned entity from cache.</param>
            <param name="entityId">The entity id.</param>
            <param name="entityName">The entity name.</param>
            <param name="entityType">The identifier PowerSHAPE uses to identify this type of entity.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Add(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Adds the entity to its relevant collection.
            </summary>
            <param name="entityToAdd">The entity to add.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.AddNoChecks(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Adds the entity to its relevant collection.
            </summary>
            <param name="entityToAdd">The entity to add.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Remove(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Removes the entity to its relevant collection.
            </summary>
            <param name="entityToRemove">The entity to remove.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSModel.Contains(Autodesk.ProductInterface.PowerSHAPE.PSEntity)">
            <summary>
            Checks whether the relevant collection contains the entity.
            </summary>
            <param name="entityToCheck">Returns true if it does.</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSWindow">
            <summary>
            Represents a window in PowerShape.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSWindow._number">
            <summary>
            The number of the window in the PowerSHAPE instance.  As others are deleted, this changes.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindow.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation,System.Int32)">
            <summary>
            This constructor creates a Window with the specified number.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <param name="number">The window number.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindow.Identifier">
            <summary>
            Gets the identifier PowerSHAPE uses to identify a window.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindow.Name">
            <summary>
            As the name command "is not implemented for this type of entity", this property
            gets and sets the number of the window.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindow.Type">
            <summary>
            Gets the type of the window.
            </summary>
            <returns>The window type - drawing or model.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindow.AttachedProcessName">
            <summary>
            Gets the name of the loaded model or drawing.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindow.IsActive">
            <summary>
            Gets whether the Window is currently active.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindow.MakeActive">
            <summary>
            Brings the current window to the front.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindow.Exists">
            <summary>
            Checks whether the Window exists.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection">
            <summary>
            Collection of Windows in CustomCore.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            This constructor initialises the model list object.
            </summary>
            <param name="powerSHAPE">The Automation object for PowerSHAPE.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.Identifier">
            <summary>
            Gets the identifier used by PowerSHAPE when selecting a Window.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.HasWindowsOpen">
            <summary>
            Returns true if there is any window opened in PowerShape and false otherwise.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.Item(System.String)">
            <summary>
            Gets the desired named window from the the collection.
            </summary>
            <returns>The desired window.</returns>
            <value>The name of the desired window (which is synonymous with its number).</value>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the window at the specified index from the collection and from PowerShape.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.Remove(System.String)">
            <summary>
            Removes the window with the specified name from the collection and from PowerShape.
            </summary>
            <param name="name">The name of the window.</param>
            <returns>True if it succeeds.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.Remove(Autodesk.ProductInterface.PowerSHAPE.PSWindow)">
            <summary>
            Removes the specified window.
            </summary>
            <param name="window">The window to delete.</param>
            <returns>True if it succeeds.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSWindowsCollection.Clear">
            <summary>
            Closes and removes all windows in the list.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.CurveTypes">
            <summary>
            Curve types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ExportItemsOptions">
            <summary>
            Used when exporting options from PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.ExportItemsOptions.All">
            <summary>
            Exports all items that are in the model regardless of selection or visibility.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.ExportItemsOptions.Selected">
            <summary>
            Exports only those items that are selected.  If no items are selection an exception shall be raised.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.ExportItemsOptions.Visible">
            <summary>
            Exports only those items that are visible.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ExportWorkplanes">
            <summary>
            Used to select the workplane when exporting from PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.ExportWorkplanes.World">
            <summary>
            Allows the user to export using the World.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.ExportWorkplanes.Active">
            <summary>
            Allows the user to export using the active workplane.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ExtensionType">
            <summary>
            Extensions types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.FeatureTypes">
            <summary>
            Feature types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions">
            <summary>
            Keep options for limiting operations.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.LimitingModes">
            <summary>
            The mode in which to carry out the limiting operation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions">
            <summary>
            Trim Options for a limiting operation. Whether to trim one or all of the entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.MeshDoctorFixOptions">
            <summary>
            Options for MeshDoctor operation that will be performed.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.MeshDoctorRepairTypes">
            <summary>
            Repair types for MeshDoctor operation that will be performed.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.NewWorkplaneInEntityPositions">
            <summary>
            Defines the positions in an entity a new workplane can be created.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.Modes">
            <summary>
            Shows the various modes in which PowerSHAPE can run.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.MultipleViewAngles">
            <summary>
            Multiple view angles that can be set.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.OptionsSections">
            <summary>
            Sections available in PowerSHAPE's options menu.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.TrimRegionEditingModes">
            <summary>
            Defining the two possible trim region editing modes.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ViewRelationships">
            <summary>
            Used when setting relationships between multiple views.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.CornerBehaviours">
            <summary>
            Used when repointing a curve.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ExtensionEnd">
            <summary>
            Used to specify the end of the curve to be extended.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ProjectionType">
            <summary>
            Used when projecting a curve onto a surface.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.FilletCornerTypes">
            <summary>
            Fillet surface corner types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.FilletCreaseOptions">
            <summary>
            Fillet along creases options.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.FilletRouteOptions">
            <summary>
            Fillet all routes options.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.FilletTrimOptions">
            <summary>
            Fillet trim options.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.FilletTypes">
            <summary>
            Fillet surface types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.AdvancedInteriorInterpolationMethods">
            <summary>
            Interior interpolation methods option for surface creation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfaceOptions">
            <summary>
            Edge matching options to control how PowerSHAPE adds extra surface points and curves to the initial network so that each point lies at the junction of a lateral and a longitudinal.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfaceTypes">
            <summary>
            Surface types in PowerShape.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.AutomaticSurfacingMethods">
            <summary>
            Methods for creating a surface from wireframe.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ExtensionEdges">
            <summary>
            Surface extension edges options.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.OffsetCornerTypes">
            <summary>
            Behaviour off the offset surface at corners.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.OffsetSplitAtDiscontinuity">
            <summary>
            Options of the offset surface when the operation produces a discontinuity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAcross">
            <summary>
            Indicates whether the points should be matched across the seam.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.StitchDirectionAlong">
            <summary>
            Indicates whether the points should be matched along the seam.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.StitchTypes">
            <summary>
            Allows you to choose the type of the target from one of the following.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveInsertionMethod">
            <summary>
            Surface curve insertion methods.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SurfaceCurveTypes">
            <summary>
            Surface direction options for a surface curve.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SurfaceShapes">
            <summary>
            Surface shape options.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SurfaceTypes">
            <summary>
            Surface types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SculptTypes">
            <summary>
            Type of sculpting operation that will be performed.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SolidTypes">
            <summary>
            Used to specify all Solid Types.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.SolidVersions">
            <summary>
            Used to distinguish between a version 8 solid and parasolid in PowerSHAPE.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.TextJustifications">
            <summary>
            Alignment option for the text.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.TextOrigins">
            <summary>
            Defines the origin of the text.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.TrianglePickMode">
            <summary>
            Triangle pick modes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.TriangleStitchIterationModes">
            <summary>
            The iteration mode used when stitching triangle meshes.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.WindowTypes">
            <summary>
            Windows types.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool">
            <summary>
            Helps to create surfaces from meshes.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Creates a new instance. Initialises the mesh and the base instance to interact with PowerShape.
            </summary>
            <param name="mesh">Initialises with the mesh used to create the surfaces.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.SimilarityAngle">
            <summary>
            Gets the previous set value and sets the 'Similarity Sliderval' in PowerShape.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>Similarity Sliderval will only be updated in PowerShape if _isToolCurrentlyActive is true.</remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.Tolerance">
            <summary>
            Gets the previous set value and sets the 'Tolerance' in PowerShape.
            </summary>
            <value></value>
            <returns>Tolerance will only be updated in PowerShape if _isToolCurrentlyActive is true.</returns>
            <remarks>
            .
            </remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.FeatureTypesToRecognise">
            <summary>
            Gets the previous set value and sets the feature types to recognise in PowerShape.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>Feature types to recognise will only be updated in PowerShape if _isToolCurrentlyActive is true.</remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.GenerateFeaturesAsSolids">
            <summary>
            Set to TRUE to generate features as solids; FALSE to generate surfaces.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.DisplayFeaturesAsTransparent">
            <summary>
            If TRUE, features will be transparent, preventing them obscuring each other.
            However this can result in selection conflicts, when clicking in an area of multiple entities.
            Set to FALSE to prevent selection conflicts.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.BlankKeptFeatures">
            <summary>
            If TRUE, features are blanked when they are persisted.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.Start">
            <summary>
            Start operation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.RecogniseTypes(System.Collections.Generic.HashSet{Autodesk.ProductInterface.PowerSHAPE.FeatureTypes})">
            <summary>
            Updates PowerShape with the feature types to recognise.
            </summary>
            <param name="types">Feature types to recognise.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.Preview">
            <summary>
            Generate and display the features.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.ExtractSelectedFeatures">
            <summary>
            Persist the selected features.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.Finish">
            <summary>
            Close the tool.
            </summary>
            <returns>The features that were extracted from the mesh.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.AutomaticFitSurfacesToMeshTool.StopTool">
            <summary>
            Stop the tool.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool">
            <summary>
            Helper to manual fit a surface to a mesh.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSMesh)">
            <summary>
            Initialises the new instance with the mesh to work with and the base instance to interact with PowerShape.
            The feature type to recognise is set to plane.
            </summary>
            <param name="mesh">The mesh to fit a surface to.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.TrianglePicker">
            <summary>
            Gets the mesh triangle picker instance.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.FeatureTypeToRecognise">
            <summary>
            Gets the previous set value and sets the feature type to recognise in PowerShape.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>Feature type to recognise will only be updated in PowerShape if _isToolCurrentlyActive is true.</remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.GenerateFeaturesAsSolids">
            <summary>
            Set to TRUE to generate features as solids; FALSE to generate surfaces.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.DisplayFeaturesAsTransparent">
            <summary>
            If TRUE, features will be transparent, preventing them obscuring each other.
            However this can result in selection conflicts, when clicking in an area of multiple entities.
            Set to FALSE to prevent selection conflicts.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.BlankKeptFeatures">
            <summary>
            If TRUE, features are blanked when they are persisted.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.StartTool">
            <summary>
            Starts manual segment mesh operation in PowerShape.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.RecogniseType(Autodesk.ProductInterface.PowerSHAPE.FeatureTypes)">
            <summary>
            Updates PowerShape with the feature type to recognise.
            </summary>
            <param name="type">The feature type to recognise.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.Preview">
            <summary>
            Generate and display the features.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.Extract">
            <summary>
            Return the last generated surface.
            </summary>
            <returns>The last surface that was generated from the mesh.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.Finish">
            <summary>
            Finishes the manual fit operation.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.ManualFitSurfaceToMeshTool.StopTool">
            <summary>
            Stop the tool.
            </summary>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityCutter">
            <summary>
            Entity cutter helper.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityCutter.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new entity cutter instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityCutter.CutEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.Geometry.Point)">
            <summary>
            Cuts a single entity at a defined point.
            </summary>
            <param name="entityToCut">The entity to cut.</param>
            <param name="pointAtWhichToCut">The point at which to cut the entity, which must lie on the entity.</param>
            <returns>A piece of the original entity.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter">
            <summary>
            Contains the necessary code to limit entities.
            </summary>
            <remarks>Must be public for the enumerations to be accessible.</remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.LimitEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSLimitable},System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits entities using a list of entities.
            </summary>
            <param name="entitiesToLimit">The entities on which to perform the limiting operation.</param>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.LimitEntity(Autodesk.ProductInterface.PowerSHAPE.IPSLimitable,Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a single entity using a list of entities.
            </summary>
            <param name="entityToLimit">The entity on which to perform the limiting operation.</param>
            <param name="limitingEntity">The entity with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.LimitEntity(Autodesk.ProductInterface.PowerSHAPE.IPSLimitable,System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits a single entity using a list of entities.
            </summary>
            <param name="entityToLimit">The entity on which to perform the limiting operation.</param>
            <param name="limitingEntities">The entities with which to perform the limiting operation.</param>
            <param name="limitingMode">The mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.NextSolution(Autodesk.ProductInterface.PowerSHAPE.IPSLimitable)">
            <summary>
            This operation will cycle to the next solution for the last limit function. To accept call AcceptLimit.
            </summary>
            <param name="entityToLimit">The entity to limit.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.NextSolution(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSLimitable})">
            <summary>
            This operation will cycle to the next solution for the last limit function. To accept call AcceptLimit.
            </summary>
            <param name="entitiesToLimit">The entity to limit.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.AcceptLimit">
            <summary>
            This operation will close the limit operation
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityLimiter.LimitEntityUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.IPSLimitable,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Does not work as created.number is not updated.
            </summary>
            <param name="entityToLimit">The entity to limit.</param>
            <param name="keepOption">Keep option, by default KeepOne.</param>
            <returns>The limited entity.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityMirrorer">
            <summary>
            Helps to mirror entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMirrorer.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Initialises new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMirrorer.MirrorEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSMirrorable},Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors entities about the specifed plane.
            </summary>
            <param name="entitiesToMirror">The entities that are to be mirrored.</param>
            <param name="mirrorPlane">The plane about which to mirror the entities.</param>
            <param name="mirrorPoint">The origin of the mirror plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMirrorer.MirrorEntity(Autodesk.ProductInterface.PowerSHAPE.IPSMirrorable,Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors a single entity about the specifed plane.
            </summary>
            <param name="entityToMirror">The single entity that is to be mirrored.</param>
            <param name="mirrorPlane">The plane about which to mirror the entity.</param>
            <param name="mirrorPoint">The origin of the mirror plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMorpher.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Initialises new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMorpher.MorphSurfacesBetweenTwoSurfaces(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSSurface},Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.DecayDefinitionOptions,Autodesk.ProductInterface.PowerSHAPE.DecayDefinitionBlend,System.Boolean,System.Boolean,Autodesk.ProductInterface.PowerSHAPE.PSSurface,Autodesk.ProductInterface.PowerSHAPE.PSGenericCurve,System.Int32,System.Double)">
            <summary>
            Morphs surfaces between a control and reference surface.  Note that you can morph one surface if it is a PowerSurface but you
            must morph more than one surface if it is not a PowerSurface.  Also, the control and reference surfaces must have the same number
            of laterals and longitudinals
            </summary>
            <param name="surfacesToMorph">The surfaces to be morphed</param>
            <param name="referenceSurface">The reference surface</param>
            <param name="controlSurface"></param>
            <param name="decayDefinitionOption"></param>
            <param name="decayDefinitionBlend"></param>
            <param name="keepReferenceAndControlSurfaces"></param>
            <param name="normalOffsetting"></param>
            <param name="decaySelection"></param>
            <param name="decayLimit"></param>
            <param name="decayValue"></param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover">
            <summary>
            Helps to move entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.SetupMove(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSMoveable},System.Int32)">
            <summary>
            Starts the Move operation.
            </summary>
            <param name="entitiesToMove">The group of entities that are to be moved.</param>
            <param name="copiesToCreate">The number of copies to create.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.FinishMove">
            <summary>
            Finishes the Move operation.
            </summary>
            <returns>A list of the copied entities that have been created.  If numberOfCopies was 0, an empty list is returned</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.MoveEntitiesByVector(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSMoveable},Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves a group of entities by a specified relative amount.
            </summary>
            <param name="entitiesToMove">The group of entities that are to be moved.</param>
            <param name="moveVector">The relative amount by which each entity will be moved.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
            <returns>A list containing any created copies of the original entities.  If copiesToCreate is 0, the operation returns an empty list.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.MoveEntityByVector(Autodesk.ProductInterface.PowerSHAPE.IPSMoveable,Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            .Moves a single entity by a specified relative amount.
            </summary>
            <param name="entityToMove">The single entity that is to be moved.</param>
            <param name="moveVector">The relative amount by which the entity will be moved.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.MoveEntitiesBetweenPoints(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSMoveable},Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a group of entities by the relative distance between two absolute positions..
            </summary>
            <param name="entitiesToMove">The group of entities that are to be moved.</param>
            <param name="moveOriginCoordinates">The first of the two absolute positions.</param>
            <param name="pointToMoveTo">The second of the two absolute positions.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
            <returns>A list containing any created copies of the original entities.  If copiesToCreate is 0, the operation returns an empty list.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityMover.MoveEntityBetweenPoints(Autodesk.ProductInterface.PowerSHAPE.IPSMoveable,Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves a single entity by the relative distance between two absolute positions.
            </summary>
            <param name="entityToMove">The single entity that is to be moved.</param>
            <param name="moveOriginCoordinates">The first of the two absolute positions.</param>
            <param name="pointToMoveTo">The second of the two absolute positions.</param>
            <param name="copiesToCreate">The number of copies that should be created by the operation.</param>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityOffseter">
            <summary>
            Offseter helper for entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityOffseter.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityOffseter.OffsetEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSOffsetable},Autodesk.Geometry.MM,System.Int32)">
            <summary>
            Offsets a group of entities by a specified distance.
            </summary>
            <param name="entitiesToOffset">The group of entities that are to be offset.</param>
            <param name="offsetDistance">The distance the entities are to be offset by.</param>
            <param name="copiesToCreate">The number of copies to create of the origina.l entities.</param>
            <returns>A list of entities created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityOffseter.OffsetEntity(Autodesk.ProductInterface.PowerSHAPE.IPSOffsetable,Autodesk.Geometry.MM,System.Int32)">
            <summary>
            Offsets a single entity by a specified distance.
            </summary>
            <param name="entityToOffset">The single entity that is to be offset.</param>
            <param name="offsetDistance">The offset value to be applied.</param>
            <param name="copiesToCreate">The number of copies to create of the original entity.</param>
            <returns>A list of entities created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityRotater">
            <summary>
            Helper to rotate entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityRotater.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityRotater.RotateEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.IPSRotateable},Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a group of entities by a specified angle around a specified axis.
            </summary>
            <param name="entitiesToRotate">The group of entities that are to be rotated.</param>
            <param name="rotationAxis">The axis around which the entities are to be rotated.</param>
            <param name="rotationAngle">The angle by which the entities are to be rotated.</param>
            <param name="copiesToCreate">The number of copies to create of the original entities.</param>
            <param name="rotationOrigin">The origin of the rotation axis.</param>
            <returns>A list of entities created by the operation.  If numberOfCopies is 0, an .empty list is returned.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityRotater.RotateEntity(Autodesk.ProductInterface.PowerSHAPE.IPSRotateable,Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates a single entity by a specified angle around a specified axis.
            </summary>
            <param name="entityToRotate">The single entity that is to be rotated.</param>
            <param name="rotationAxis">The axis around which the entity is are to be rotated.</param>
            <param name="rotationAngle">The angle by which the entity is to be rotated.</param>
            <param name="copiesToCreate">The number of copies to create of the original entity.</param>
            <param name="rotationOrigin">The origin of the rotation axis.</param>
            <returns>A list of entities created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSEntityScaler">
            <summary>
            Helper to scale an entity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityScaler.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSAutomation)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="powerSHAPE">The base instance to interact with PowerShape.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityScaler.ScaleUniform(Autodesk.ProductInterface.PowerSHAPE.IPSScalable,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Lets you resize selected objects in a uniform manner, making them larger or smaller equally in all directions. You can also lock the scaling factor in any of the directions.
            </summary>
            <param name="entityToScale">The entity to scale.</param>
            <param name="scaleFactor">The scale value.</param>
            <param name="lockX">Locked in x if true.</param>
            <param name="lockY">Locked in y if true.</param>
            <param name="lockZ">Locked in z if true.</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityScaler.ScaleNonUniform(Autodesk.ProductInterface.PowerSHAPE.IPSScalable,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Resizes selected objects in a non-uniform manner, allowing you to choose the scaling to be applied for each axis.
            </summary>
            <param name="entityToScale">The entity to scale.</param>
            <param name="scaleFactorX">The x scale factor.</param>
            <param name="scaleFactorY">The y scale factor.</param>
            <param name="scaleFactorZ">The z scale factor.</param>
            <param name="lockX">Locked in x if true.</param>
            <param name="lockY">Locked in y if true.</param>
            <param name="lockZ">Locked in z if true.</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSEntityScaler.ScaleProjectedVolume(Autodesk.ProductInterface.PowerSHAPE.IPSScalable,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Resizes surfaces and solids according to their volume as projected on to the active workplane.
            </summary>
            <param name="entityToScale">The entity to scale.</param>
            <param name="newVolume">The new projected volume.</param>
            <param name="lockX">Locked in x if true.</param>
            <param name="lockY">Locked in y if true.</param>
            <param name="lockZ">Locked in z if true.</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker">
            <summary>
            This class allows the user to select triangles in a mesh using a variety of methods,
            and perform 3 separate actions on the selection.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.#ctor(Autodesk.ProductInterface.PowerSHAPE.PSMesh,Autodesk.ProductInterface.PowerSHAPE.TrianglePickMode)">
            <summary>
            Creates new instance.
            </summary>
            <param name="mesh">Initialises the mesh.</param>
            <param name="pickMode">Initialises the pick mode.</param>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.Mode">
            <summary>
            Gets the previous set value and Sets the triangle pick mode in PowerShape.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.AngleForHorizonOrDiscontinuity">
            <summary>
            Gets the previous set value and Sets the angle for horizon or discontinuity mode in PowerShape.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.StartPicking">
            <summary>
            Starts the picking operation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.DeleteSelectedTriangles">
            <summary>
            Deletes selected triangles.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.MaskSelectedTriangles">
            <summary>
            Masks selected triangles.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.UnmaskSelectedTriangles">
            <summary>
            Unmask selected triangles.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSMeshTrianglePicker.StopPicking">
            <summary>
            Stops picking operation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSAddable">
            <summary>
            Allows to add an entity to another entity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSAddable.AddEntityToEntity(Autodesk.ProductInterface.PowerSHAPE.IPSAddable,System.Boolean)">
            <summary>
            Add two entities together.
            </summary>
            <param name="entityToAdd">Entity to be added.</param>
            <param name="copeWithCoincidentFaces">If it should cope with coincident faces.</param>
            <returns>Entity created from the addition.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSAddable.AddEntitiesToEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSAddable},System.Boolean)">
            <summary>
            Add a group of entities to another entity.
            </summary>
            <param name="entitiesToAdd">Entities to be added.</param>
            <param name="copeWithCoincidentFaces">If it should cope with coincident faces.</param>
            <returns>Entity created from the addition.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSCuttable">
            <summary>
            Allows an entity to be divided into two entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSCuttable.Cut(Autodesk.Geometry.Point)">
            <summary>
            Cuts an entity.
            </summary>
            <param name="pointAtWhichToCut">The point used to cut the entity.</param>
            <returns>The new created entity.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable">
            <summary>
            Allows intersectable behaviour between entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable.IntersectEntityWithEntity(Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable,System.Boolean)">
            <summary>
            Intersects an entity with another entity.
            </summary>
            <param name="entityToIntersect">The entity to intersect.</param>
            <param name="copeWithCoincidentFaces">Cope with coincident faces value.</param>
            <returns>The entity created from the intersection.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable.IntersectEntitiesWithEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSIntersectable},System.Boolean)">
            <summary>
            Intersects a collection of entities with another entity.
            </summary>
            <param name="entitiesToIntersect">The entity to intersect.</param>
            <param name="copeWithCoincidentFaces">Cope with coincident faces value.</param>
            <returns>The entity created from the intersection.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSLimitable">
            <summary>
            Allows an entity to be limited by another entity or entities.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSLimitable.LimitToEntity(Autodesk.ProductInterface.PowerSHAPE.PSEntity,Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits an entity by other entity.
            </summary>
            <param name="limitingEntity">Entity with which to perform the limiting operation.</param>
            <param name="limitingMode">Mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities.</param>
            <param name="finishOperation">Whether the operation should be ended.</param>
            <returns>A list containing the new entities.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSLimitable.LimitToEntities(System.Collections.Generic.List{Autodesk.ProductInterface.PowerSHAPE.PSEntity},Autodesk.ProductInterface.PowerSHAPE.LimitingModes,Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions,Autodesk.ProductInterface.PowerSHAPE.LimitingTrimOptions,System.Boolean)">
            <summary>
            Limits an entity by other entities.
            </summary>
            <param name="limitingEntities">Entities to limit with.</param>
            <param name="limitingMode">Mode in which to carry out the operation.</param>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <param name="trimOption">Whether to trim one or all of the entities</param>
            <param name="finishOperation">Whether the operation should be ended.</param>
            <returns>A list containing the new entities.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSLimitable.LimitUsingDynamicCutter(Autodesk.ProductInterface.PowerSHAPE.LimitingKeepOptions)">
            <summary>
            Limits using the dynamic cutter option.
            </summary>
            <param name="keepOption">Whether to keep one or both sides of the limit.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSMirrorable">
            <summary>
            Allows an entity to be mirrored.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSMirrorable.Mirror(Autodesk.Planes,Autodesk.Geometry.Point)">
            <summary>
            Mirrors an entity in a specified plane.
            </summary>
            <param name="mirrorPlane">The plane about which to mirror.</param>
            <param name="mirrorPoint">The origin of the mirror plane.</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSMoveable">
            <summary>
            Allows an entity to be moved.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSMoveable.MoveByVector(Autodesk.Geometry.Vector,System.Int32)">
            <summary>
            Moves an entity by a specified relative amount.
            </summary>
            <param name="moveVector">Relative amount by which the entity will be moved.</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation.</param>
            <returns>A list of the copied entities that have been created.  If numberOfCopies was 0, an empty list is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSMoveable.MoveBetweenPoints(Autodesk.Geometry.Point,Autodesk.Geometry.Point,System.Int32)">
            <summary>
            Moves an entity by the relative distance between two absolute positions.
            </summary>
            <param name="moveOriginCoordinates">First of the two absolute positions.</param>
            <param name="pointToMoveTo">Second of the two absolute positions.</param>
            <param name="copiesToCreate">Number of copies that should be created by the operation.</param>
            <returns>A list of the copied entities that have been created.  If numberOfCopies was 0, an empty list is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSOffsetable">
            <summary>
            Allows the offset of an entity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSOffsetable.Offset(Autodesk.Geometry.MM,System.Int32)">
            <summary>
            Offsets a single entity by a specified distance.
            </summary>
            <param name="offsetDistance">Distance by which to offset the curve.</param>
            <param name="copiesToCreate">Number of copies to be created from the operation.</param>
            <returns>A list of the copied entities that have been created.  If numberOfCopies was 0, an empty list is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSRotateable">
            <summary>
            Allows entities rotation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSRotateable.Rotate(Autodesk.Axes,Autodesk.Geometry.Degree,System.Int32,Autodesk.Geometry.Point)">
            <summary>
            Rotates an entity arc by a specified angle around a specified axis.
            </summary>
            <param name="rotationAxis">The axis around which the arc is are to be rotated.</param>
            <param name="rotationAngle">The angle by which the arc is to be rotated.</param>
            <param name="copiesToCreate">The number of copies to create of the original arc.</param>
            <param name="rotationOrigin">The origin of the rotation axis.</param>
            <returns>A list of entities created by the operation.  If numberOfCopies is 0, an empty list is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSScalable">
            <summary>
            Allows scaleable behaviour.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSScalable.ScaleUniform(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Scales entity by a single value. Axis can be locked to prevent scaling on that axis.
            </summary>
            <param name="scaleFactor">The scale factor.</param>
            <param name="lockX">Locks X axis to prevent scaling.</param>
            <param name="lockY">Locks Y axis to prevent scaling.</param>
            <param name="lockZ">Locks Z axis to prevent scaling.</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSScalable.ScaleNonUniform(System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Resizes selected objects in a non-uniform manner, allowing you to choose the scaling to be applied for each axis.
            </summary>
            <param name="scaleFactorX">The x scale factor.</param>
            <param name="scaleFactorY">The y scale factor.</param>
            <param name="scaleFactorZ">The z scale factor.</param>
            <param name="lockX">Locked in x if true.</param>
            <param name="lockY">Locked in y if true.</param>
            <param name="lockZ">Locked in z if true.</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSScalable.ScaleProjectedVolume(System.Double,System.Boolean,System.Boolean,System.Boolean,Autodesk.Geometry.Point)">
            <summary>
            Resizes entities according to their volume as projected on to the active workplane.
            </summary>
            <param name="newVolume">The projected volume.</param>
            <param name="lockX">Locked in x if true.</param>
            <param name="lockY">Locked in y if true.</param>
            <param name="lockZ">Locked in z if true.</param>
            <param name="scaleOrigin">Objects are scaled relative to the scale origin.</param>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable">
            <summary>
            Allows an entity to be subtracted.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable.SubtractEntityFromEntity(Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable,System.Boolean)">
            <summary>
            Subtracts an entity from another entity.
            </summary>
            <param name="entityToSubtract">Entity to subtract.</param>
            <param name="copeWithCoincidentFaces">Cope with coincident faces option.</param>
            <returns>Entity created from the subtraction.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable.SubtractEntitiesFromEntity(System.Collections.Generic.IEnumerable{Autodesk.ProductInterface.PowerSHAPE.IPSSubtractable},System.Boolean)">
            <summary>
            Subtracts a collection of entities from another entity.
            </summary>
            <param name="entitiesToSubtract">Entities to subtract.</param>
            <param name="copeWithCoincidentFaces">Cope with coincident faces option.</param>
            <returns>Entity created from the subtraction.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PowerSHAPE.PSAutomation">
            <summary>
            This is the root class of a PowerSHAPE instance.
            When it is created it creates its own instance of PowerSHAPE.
            When it is destroyed the instance of PowerSHAPE will also be destroyed.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._powerSHAPE">
            <summary>
            The COM reference to the instance of PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.TrueValue">
            <summary>
            PowerShape true value represented in 1 means true and 0 means false;
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CLASS_ID">
            <summary>
            The Class Id for the PowerSHAPE COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_SURFACER_CLASS_ID">
            <summary>
            The Class Id for the PowerSHAPE Surfacer COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_VIEWER_CLASS_ID">
            <summary>
            The Class Id for the PowerSHAPE Viewer COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_ESTIMATOR_CLASS_ID">
            <summary>
            The Class Id for the PowerSHAPE Estimator COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PMILL_MODELLING_CLASS_ID">
            <summary>
            The Class Id for the PowerMill Modeller COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PMILL_SKETCHER_CLASS_ID">
            <summary>
            The Class Id for the PowerMill Sketcher COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PMILL_ELECTRODE_CLASS_ID">
            <summary>
            The Class Id for the PowerMill Electrode COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.APP_NAME">
            <summary>
            The name of the Application as entered in the registry.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.EXE_NAME">
            <summary>
            The name of the PowerSHAPE executable.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ARGUMENTS">
            <summary>
            The arguments used to hide powershape when it is starting.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_E_ARGUMENTS">
            <summary>
            The arguments used to hide powershape-e when it is starting.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_SURFACER_ARGUMENTS">
            <summary>
            The Class Id for the PowerSHAPE Surfacer COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_VIEWER_ARGUMENTS">
            <summary>
            The Class Id for the PowerSHAPE Viewer COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PS_ESTIMATOR_ARGUMENTS">
            <summary>
            The Class Id for the PowerSHAPE Estimator COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PMILL_MODELLING_ARGUMENTS">
            <summary>
            The Class Id for the PowerMill Modeller COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PMILL_SKETCHER_ARGUMENTS">
            <summary>
            The Class Id for the PowerMill Sketcher COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PMILL_ELECTRODE_ARGUMENTS">
            <summary>
            The Class Id for the PowerMill Electrode COM server.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._models">
            <summary>
            The list of Models that is currently in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._windows">
            <summary>
            The list of Windows that is currently in PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._isInTrimRegionEditing">
            <summary>
            This is a flag to indicate whether PowerSHAPE is in trim region editing mode when a surface is selected.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._trimRegionEditingMode">
            <summary>
            The current trim region editing mode.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._applicationMode">
            <summary>
            The mode in which the application was started.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._lastActivatedView">
            <summary>
            The last view that was activated.  It is required because before opening dynamic
            sectioning you must register the view with PowerSHAPE.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._isIntelligentCursorOn">
            <summary>
            This is a flag to indicate the status of the intelligent cursor and whether it is turned on or off.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.#ctor(System.Object)">
            <summary>
            Connect to an instance of PowerShape that is passed in (this should be the COM object)
            </summary>
            <param name="powerShapeComObject">The COM object of PowerShape to connect to.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.#ctor(Autodesk.ProductInterface.InstanceReuse,Autodesk.ProductInterface.PowerSHAPE.Modes)">
            <summary>
            Calls down to the base class to start PowerSHAPE based on the specified startup option.
            </summary>
            <param name="instanceReuse">Specifies how to start the application (e.g. use existing running PowerShape instance, create a new instance alongside any existing instances, etc.)</param>
            <param name="applicationMode">The mode in which PowerSHAPE will run.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.#ctor(Autodesk.ProductInterface.InstanceReuse,System.Version,System.Version,Autodesk.ProductInterface.PowerSHAPE.Modes)">
            <summary>
            Calls down to the base class to start PowerSHAPE based on the specified options.
            </summary>
            <param name="instanceReuse">Specifies how to start the application (e.g. use existing running PowerShape instance, create a new instance alongside any existing instances, etc.)</param>
            <param name="version">The version to run.</param>
            <param name="maximumVersion">If filled, the version of PowerShape to run has to be less of equal to 'maximumVersion'.</param>
            <param name="applicationMode">The mode in which PowerSHAPE will run.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.UseExistingInstance(System.Version,System.Version)">
            <summary>
            Attempts to connect to an existing version of PowerSHAPE or create a new one.
            </summary>
            <param name="version">The version to run.</param>
            <param name="maximumVersion">If filled, the version of PowerShape to run has to be less of equal to 'maximumVersion'.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CreateNewInstance(System.Version,System.Version)">
            <summary>
            Creates a new instance of PowerShape.
            </summary>
            <param name="version">The version to run.</param>
            <param name="maximumVersion">If filled, the version of PowerShape to run has to be less of equal to 'maximumVersion'.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CreateSingleInstance(System.Version,System.Version)">
            <summary>
            Closes all running instance of PowerSHAPE and start a new one.
            </summary>
            <param name="version">The version to run.</param>
            <param name="maximumVersion">If filled, the version of PowerShape to run has to be less of equal to 'maximumVersion'.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.Quit">
            <summary>
            Closes the instance of the PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RecordMacro(System.String)">
            <summary>
            Records the macro into file path.
            </summary>
            <param name="macroFilename">The file path to save the macro.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.StopMacroRecording">
            <summary>
            Stops recording macro.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.Reset">
            <summary>
            Closes all Models in PowerSHAPE and create a new one.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RefreshWindowsAndModelsList">
            <summary>
            Refresh the list of windows and models.
            Use it if a model has been added manually.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RunMacro(Autodesk.FileSystem.File)">
            <summary>
            Runs the Macro at the given location.
            </summary>
            <param name="macroFile">The file path to the macro.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RunMacro(Autodesk.ProductInterface.PowerSHAPE.PSMacro)">
            <summary>
            Runs the specified Macro.
            </summary>
            <param name="macro">The macro to be run.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.LoadMacro(Autodesk.FileSystem.File)">
            <summary>
            Loads a macro from the specified file that can be stepped through or run with progress feedback.
            </summary>
            <param name="macroFile">The file path from which to load the macro.</param>
            <returns>The new loaded macro.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.LoadMacro(System.String[])">
            <summary>
            Create a macro from a string.
            </summary>
            <param name="macro">macro list.</param>
            <returns>The new PMMacro.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RunMacro(System.String[])">
            <summary>
            Runs the Macro at the given location.
            </summary>
            <param name="macro">The macro lines.</param>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.MainWindowId">
            <summary>
            Gets the handle of the main window for PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsVisible">
            <summary>
            Gets or sets the property showing whether PowerSHAPE is visible or not.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsGUIVisible">
            <summary>
            Shows/Hides the User Interface (toolbars, etc.).
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.Execute(System.String[])">
            <summary>
            Runs an array of commands in PowerSHAPE.  It is marked as obsolete as all commands should be
            available as functions in this Automation Interface.
            </summary>
            <param name="commands">The commands to execute.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ExecuteEx(System.String)">
            <summary>
            Evaluates the given command in PowerSHAPE.  It is marked as obsolete as all commands should be
            available as functions in this Automation Interface.
            </summary>
            <param name="command">The commands to execute.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.DoCommand(System.String[])">
            <summary>
            Runs an array of commands in PowerSHAPE.  It is a friend version equivalent to Execute
            but does not give the obsolete warning.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.DoCommandEx(System.String)">
            <summary>
            Runs the given command in PowerSHAPE.  It is a friend version equivalent to ExecuteEx
            but does not give the obsolete warning.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ReadStringValue(System.String)">
            <summary>
            Runs the given command in PowerSHAPE and return the string result.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ReadBoolValue(System.String)">
            <summary>
            Runs the given command in PowerSHAPE and return bool value.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ReadIntValue(System.String)">
            <summary>
            Runs the given command in PowerSHAPE and return int value.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ReadDoubleValue(System.String)">
            <summary>
            Runs the given command in PowerSHAPE and return double value.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsBusy">
            <summary>
            Evaluates whether PowerSHAPE is busy or not.
            </summary>
        </member>
        <member name="F:Autodesk.ProductInterface.PowerSHAPE.PSAutomation._disposedValue">
            <summary>
            Disposal code closes the PowerSHAPE instance that was created by the constructor.  It exits without
            saving changes.  It up to the developer to ensure that all changes are saved prior to exiting.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetViewAngle(Autodesk.ViewAngles)">
            <summary>
            Sets the View Angle of PowerSHAPE.
            </summary>
            <param name="viewAngle">The view angle to set.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetMultipleViewAngle(Autodesk.ProductInterface.PowerSHAPE.MultipleViewAngles)">
            <summary>
            Sets a multiple view angle rather than a single view angle.  This will split the screen into
            three or four views.
            </summary>
            <param name="viewAngle">The view angle required.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetSplit2ViewAngle(Autodesk.ViewAngles,Autodesk.ViewAngles,Autodesk.ProductInterface.PowerSHAPE.ViewRelationships,Autodesk.ProductInterface.PowerSHAPE.ViewRelationships)">
            <summary>
            Sets the view angles and relationships for a 2 split view.  The relationship locks the child's
            rotation to that of the parent.
            </summary>
            <param name="leftAngle">The view angle for the left pane.</param>
            <param name="rightAngle">The view angle for the right pane.</param>
            <param name="leftRelationship">The relationship of the left pane to the right.</param>
            <param name="rightRelationship">The relationship of the right pane to the left.</param>
            <remarks></remarks>
            .
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetSplit4ViewAngle(Autodesk.ViewAngles,Autodesk.ViewAngles,Autodesk.ViewAngles,Autodesk.ViewAngles,Autodesk.ProductInterface.PowerSHAPE.ViewRelationships,Autodesk.ProductInterface.PowerSHAPE.ViewRelationships,Autodesk.ProductInterface.PowerSHAPE.ViewRelationships,Autodesk.ProductInterface.PowerSHAPE.ViewRelationships)">
            <summary>
            Sets the view angles and relationships for a 4 split view.  The relationship locks the child's
            rotation to that of the parent.
            </summary>
            <param name="topLeftAngle">The view angle for the top left pane.</param>
            <param name="topRightAngle">The view angle for the top right pane.</param>
            <param name="bottomLeftAngle">The view angle for the bottom left pane.</param>
            <param name="bottomRightAngle">The view angle for the bottom right pane.</param>
            <param name="topLeftRelationship">The relationship of the top left pane to the other panes.</param>
            <param name="topRightRelationship">The relationship of the top right pane to the other panes.</param>
            <param name="bottomLeftRelationship">The relationship of the bottom left pane to the other panes.</param>
            <param name="bottomRightRelationship">The relationship of the bottom right pane to the other panes.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ResizeViewToFit">
            <summary>
            Resize the view to fit all visible items.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetActivePlane(Autodesk.Planes)">
            <summary>
            Sets the active plane of PowerSHAPE.
            </summary>
            <param name="desiredPlane">The plane to activate.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetShadedWireframeView">
            <summary>
            Sets the view to show wireframes with a shaded model.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetWireframeView">
            <summary>
            Sets the view to show wireframes.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetHiddenWireframeView">
            <summary>
            Sets the view to show wireframes including hidden wireframe.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetEnhancedShading">
            <summary>
            Sets the view to enhanced shading.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetShadedView">
            <summary>
            Sets the view to normal shading.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ToggleTransparentView">
            <summary>
            Toggles transparent shading.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetShadedAndWireframeView">
            <summary>
            Sets the view to show shaded wireframe.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetMeshViewOpenEdgesOnlyShaded">
            <summary>
            Sets the view for a Mesh to show open edges with the triangles shaded.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetMeshViewOpenAndInteriorEdgesShaded">
            <summary>
            Sets the view for a Mesh to show open edges and triangle edges with the triangles shaded.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetMeshViewOpenAndInteriorEdgesAndNodesShaded">
            <summary>
            Sets the view for a Mesh to show open edges and triangle edges and triangle nodes
            with the triangles shaded.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetMeshViewOpenAndInteriorEdgesHollow">
            <summary>
            Sets the view for a Mesh to show open edges and triangle edges with the triangles hollow.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetMeshViewOpenAndInteriorEdgesAndNodesHollow">
            <summary>
            Sets the view for a Mesh to show open edges and triangle edges and triangle nodes
            with the triangles hollow.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetShadingTolerance(System.Double)">
            <summary>
            Sets the shading tolerance for PowerSHAPE and regenerates triangles
            </summary>
            <param name="tolerance">The required shading tolerance</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ResetDynamicSectioning(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Open/Reset the Dynamic Sectioning view.
            </summary>
            <param name="drawEdges">Select this option to draw the edges of the section.</param>
            <param name="translucency">Select this option to draw the section translucent.</param>
            <param name="capSolids">Select this option to display a cap on the solid where it is intersects with the clipping plane.</param>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetDynamicSectioningDrawEdges(System.Boolean)">
            <summary>
            Sets whether edges are draw in dynamic sectioning mode.
            </summary>
            <param name="drawEdges">Draw edges in dynamic sectioning mode.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetDynamicSectioningTranslucency(System.Boolean)">
            <summary>
            Sets whether transparency is shown in dynamic sectioning mode.
            </summary>
            <param name="translucency">Shows transparency in dynamic sectioning mode.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetDynamicSectioningCapSolids(System.Boolean)">
            <summary>
            Sets whether cap solids are draw in dynamic sectioning mode.
            </summary>
            <param name="capSolids">Draw cap solids in dynamic sectioning mode.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CloseDynamicSectioning">
            <summary>
            Closes the Dynamic Sectioning view.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetDynamicSectioningFrontPlane(System.Double)">
            <summary>
            Set the position of the front plane for Dynamic Sectioning.
            </summary>
            <param name="planePosition">The position of the front plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CreateWorkplaneAtFrontPlane">
            <summary>
            Creates a workplane at the centre of the front plane for Dynamic Sectioning.
            </summary>
            <returns>The created Workplane or Nothing if this failed.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CreateWireframeAtFrontPlane">
            <summary>
            Creates composite curves through the model at the front plane for Dynamic Sectioning.
            </summary>
            <returns>A list of created curves</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.SetDynamicSectioningRearPlane(System.Double)">
            <summary>
            Sets the position of the rear plane for Dynamic Sectioning.
            </summary>
            <param name="planePosition">The position of the rear plane.</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CreateWorkplaneAtRearPlane">
            <summary>
            Creates a workplane at the centre of the rear plane for Dynamic Sectioning.
            </summary>
            <returns>The created Workplane or Nothing if this failed.</returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CreateWireframeAtRearPlane">
            <summary>
            Creates composite curves through the model at the rear plane for Dynamic Sectioning.
            </summary>
            <returns>The list of created curves.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ActiveDocument">
            <summary>
            Gets the ActiveDocument object for PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ExecutableName">
            <summary>
            The name of the process in the process list.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ClassId">
            <summary>
            The class Id to use based on the Application Mode selected through the constructor.
            </summary>
            <returns></returns>
            <value></value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CommandArguments">
            <summary>
            Gets the arguments to use based on the Application Mode selected through the constructor.
            </summary>
            <returns></returns>
            <value></value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.Mode">
            <summary>
            Gets the mode in which PowerSHAPE is running.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsInTrimRegionEditing">
            <summary>
            Gets/sets whether PowerSHAPE is in surface trim region editing mode.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.TrimRegionEditingMode">
            <summary>
            Toggles the current trim editing mode between boundary editing and pCurve editing.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.DrawingTolerance">
            <summary>
            Gets and sets the drawing tolerance of all models.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsIntelligentCursorOn">
            <summary>
            Gets and sets whether the intelligent cursor is on or off.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ArcFitPicFiles">
            <summary>
            Sets whether to arc fit comp curves when importing DUCT Picture files
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ActiveWindow">
            <summary>
            Gets the active window from within PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.ActiveModel">
            <summary>
            Gets the Active Model from within PowerSHAPE.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.Models">
            <summary>
            Gets the list of Models currently open in PowerSHAPE.
            </summary>
            <returns>The list of Models currently open in PowerSHAPE.</returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.Windows">
            <summary>
            Gets the list of Windows currently open in PowerSHAPE.
            </summary>
            <returns></returns>
            <value></value>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsCurveCurvatureCombsVisible">
            <summary>
            Sets whether the Curvature Combs are visible or not.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsCurvePointLabelsVisible">
            <summary>
            Sets whether the Point Labels are visible or not.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsCurveApplySmoothness">
            <summary>
            Sets whether the Curve apply smoothing to end points is enabled.
            Create a dummy curve and delete it to refresh Powershape button state.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.IsPlanesLocked">
            <summary>
            Sets whether or not planes are locked.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.DialogsOn">
            <summary>
            Switches the dialogs on in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.DialogsOff">
            <summary>
            Switches the dialogs off in PowerSHAPE.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.FormUpdateOn">
            <summary>
            Turns Forms on.  Any forms raised will be shown on screen.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.FormUpdateOff">
            <summary>
            Turns Forms off.  Any forms raised will not be shown.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RefreshOn">
            <summary>
            Turns graphics updates on.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.RefreshOff">
            <summary>
            Turns graphics updates off.
            </summary>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.OpenOptions(Autodesk.ProductInterface.PowerSHAPE.OptionsSections)">
            <summary>
            Opens the options menu found in Tools.
            </summary>
            <param name="sectionToOpen">This is the desired section of the options menu</param>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.CloseOptions">
            <summary>
            Closes the Tools option menu.
            </summary>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.UserLogin">
            <summary>
            The user's login
            </summary>
            <returns></returns>
        </member>
        <member name="P:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.UserName">
            <summary>
            The user's name
            </summary>
            <returns></returns>
        </member>
        <member name="M:Autodesk.ProductInterface.PowerSHAPE.PSAutomation.PickPoint(Autodesk.ProductInterface.ICancelPointPickCheck)">
            <summary>
            Starts a point picking function in PowerSHAPE and will wait until the point is picked.
            </summary>
            <param name="cancelPointPickingCheck">Contains a previous state of CancelPointPickCheck.</param>
            <returns>The point picked by the user or nothing if cancelled.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.PSCancelPointPicker">
            <summary>
            Cancel point picker helper.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PSCancelPointPicker.CanelPointPicking">
            <summary>
            Sets IsCancelled flag to true.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.PSCancelPointPicker.IsCancelPointPick">
            <summary>
            Returns IsCancelled flag state.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Autodesk.ProductInterface.ICancelPointPickCheck">
            <summary>
            Cancel point picker helper interface.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.ICancelPointPickCheck.IsCancelPointPick">
            <summary>
            Gets CancelPointPick state.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Autodesk.ProductInterface.ICancelPointPickCheck.CanelPointPicking">
            <summary>
            Cancels point picking.
            </summary>
            <remarks></remarks>
        </member>
    </members>
</doc>
